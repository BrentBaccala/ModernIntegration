Script started on Sun 20 Apr 2008 02:14:28 AM EDT
baccala@bigsky ~/DifAlg$ M2
Macaulay 2, version 1.1
with packages: Classic, Core, Elimination, IntegralClosure, LLLBases, Parsing,
               PrimaryDecomposition, SchurRings, TangentCone

i1 : Rx=QQ[x]

o1 = Rx

o1 : PolynomialRing

i2 : num=poly "2x6+4x5+7x4-3x3-x2-8x-8"

       6     5     4     3    2
o2 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o2 : Rx

i3 : S2=poly "4x4+6x3+6x2+6x"

       4     3     2
o3 = 4x  + 6x  + 6x  + 6x

o3 : Rx

i4 : gcd(num,S2)

o4 = 1

o4 : Rx

i5 : Q=S2

       4     3     2
o5 = 4x  + 6x  + 6x  + 6x

o5 : Rx

i6 : T2=num

       6     5     4     3    2
o6 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o6 : Rx

i7 : gcd(Q,poly "2x2-1")

o7 = 1

o7 : Rx

i8 : gcd(Q,poly "2x2-1")i8 : [1P[1P[1P[1P[1P[1P[1@V[1@=poly "2x2-1"

       2
o8 = 2x  - 1

o8 : Rx

i9 : gcdCoefficients (V,Q)

           36  3   38  2   48        18      8
o9 = {1, - --*x  - --*x  - --*x - 1, --*x - --}
           49      49      49        49     49

o9 : List

i10 : gcdCoefficients (V,Q)[2]
stdio:10:1:(1):[0]: no method for adjacent objects:
--                  36  3   38  2   48        18      8
--            {1, - --*x  - --*x  - --*x - 1, --*x - --} (of class List)
--                  49      49      49        49     49
--    SPACE   [2] (of class Array)

i11 : gcdCoefficients (V,Q)#1
stdio:11:1:(1):[0]: no method found for applying gcdCoefficients to:
                     4     3     2
     argument   :  4x  + 6x  + 6x  + 6x (of class Rx)

i12 : gcdCoefficients (V,Q)i12 : [1@(gcdCoefficients (V,Q))#1

        36  3   38  2   48
o12 = - --*x  - --*x  - --*x - 1
        49      49      49

o12 : Rx

i13 : (gcdCoefficients (V,Q))#0

o13 = 1

o13 : Rx

i14 : (gcdCoefficients (V,Q))#1

        36  3   38  2   48
o14 = - --*x  - --*x  - --*x - 1
        49      49      49

o14 : Rx

i15 : (gcdCoefficients (V,Q))#2

      18      8
o15 = --*x - --
      49     49

o15 : Rx

i16 : (gcdCoefficients (V,Q))

            36  3   38  2   48        18      8
o16 = {1, - --*x  - --*x  - --*x - 1, --*x - --}
            49      49      49        49     49

o16 : List

i17 : (gcdCoefficients (V,Q))#1i17 : [1@A[1@=

        36  3   38  2   48
o17 = - --*x  - --*x  - --*x - 1
        49      49      49

o17 : Rx

i18 : A=(gcdCoefficients (V,Q))#1i18 : [1P[1@R=(gcdCoefficients (V,Q))#2

      18      8
o18 = --*x - --
      49     49

o18 : Rx

i19 : V

        2
o19 = 2x  - 1

o19 : Rx

i20 : A

        36  3   38  2   48
o20 = - --*x  - --*x  - --*x - 1
        49      49      49

o20 : Rx

i21 : R

      18      8
o21 = --*x - --
      49     49

o21 : Rx

i22 : Q

        4     3     2
o22 = 4x  + 6x  + 6x  + 6x

o22 : Rx

i23 : A*V+R*Q

o23 = 1

o23 : Rx

i24 : T2

        6     5     4     3    2
o24 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o24 : Rx

i25 : T2*R

      36  7   8  6   94  5   110  4    6  3   136  2   80     64
o25 = --*x  + -*x  + --*x  - ---*x  + --*x  - ---*x  - --*x + --
      49      7      49       49      49       49      49     49

o25 : Rx

i26 : T2*R[1@(T2*R)%V

            1
o26 = - x - -
            2

o26 : Rx

i27 : (T2*R)[1P/V

      36  7   8  6   94  5   110  4    6  3   136  2   80     64
      --*x  + -*x  + --*x  - ---*x  + --*x  - ---*x  - --*x + --
      49      7      49       49      49       49      49     49
o27 = ----------------------------------------------------------
                                  2
                                2x  - 1

o27 : frac(Rx)

i28 : V

        2
o28 = 2x  - 1

o28 : Rx

i29 : diff(x,V)

o29 = 4x

o29 : Rx

i30 : diff(x,V)i30 : V[(T2*R)%Vi30 : [4PT2[K(T2*R)%Vi30 : [1@B[1@2[1@=

            1
o30 = - x - -
            2

o30 : Rx

i31 : B2=(T2*R)[1P/i31 : [1P[1@Q

      36  7   8  6   94  5   110  4    6  3   136  2   80     64
      --*x  + -*x  + --*x  - ---*x  + --*x  - ---*x  - --*x + --
      49      7      49       49      49       49      49     49
o31 = ----------------------------------------------------------
                                  2
                                2x  - 1

o31 : frac(Rx)

i32 : Q2=(T2*R)/Vi32 : B2=(T2*R)%Vi32 : [2Pdiff(x,V)*Q2+diff(x,B2)

      144  8   32  7   376  6   440  5   24  4   544  3   418  2   256
      ---*x  + --*x  + ---*x  - ---*x  + --*x  - ---*x  - ---*x  + ---*x + 1
       49       7       49       49      49       49       49       49
o32 = ----------------------------------------------------------------------
                                        2
                                      2x  - 1

o32 : frac(Rx)

i33 : diff(x,V)*Q2+diff(x,B2)i33 : [1@(diff(x,V)*Q2+diff(x,B2))/V

      144  8   32  7   376  6   440  5   24  4   544  3   418  2   256
      ---*x  + --*x  + ---*x  - ---*x  + --*x  - ---*x  - ---*x  + ---*x + 1
       49       7       49       49      49       49       49       49
o33 = ----------------------------------------------------------------------
                                     4     2
                                   4x  - 4x  + 1

o33 : frac(Rx)

i34 : num

        6     5     4     3    2
o34 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o34 : Rx

i35 : U

o35 = U

o35 : Symbol

i36 : V

        2
o36 = 2x  - 1

o36 : Rx

i37 : U=poly "x4+4x3+2x2+1"

       4     3     2
o37 = x  + 4x  + 2x  + 1

o37 : Rx

i38 : U=poly "x4+4x3+2x2+1"i38 : V[nu(diff(x,V)*Q2+diff(x,B2))/Vi38 : num[K/(V*U)

        6     5     4     3    2
      2x  + 4x  + 7x  - 3x  - x  - 8x - 8
o38 = -----------------------------------
             6     5     4     3
           2x  + 8x  + 3x  - 4x  - 1

o38 : frac(Rx)

i39 : num/(V*U)i39 : U=poly "x4+4x3+2x2+1"i39 : V[nu(diff(x,V)*Q2+diff(x,B2))/Vi39 : [4Pdiff(x,V)*Q2+diff(x,B2)i39 : (diff(x,V)*Q2+diff(x,B2))/Vi39 : [1@n[1@u[1@m[1@/[1@[1P([1@[1@V[1@*[1@U[1@)[1@ [1@-[1@ (diff(x,V)*Q2+diff(x,B2))/Vi39 : num/(V*U) - 

        144  12   800  11   1560  10   216  9   148  8   1496  7   394  6   2454
      - ---*x   - ---*x   - ----*x   - ---*x  + ---*x  + ----*x  + ---*x  + ----
         49        49        49         7        7        49        7        49 
o39 = --------------------------------------------------------------------------
                                            8      7     6      5     4     3   
                                          4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 
      --------------------------------------------------------------------------
        5   702  4   801  3   415  2   136
      *x  - ---*x  - ---*x  - ---*x  + ---*x + 7
             49       49       49       49
      ------------------------------------------
        2
      2x  + 1

o39 : frac(Rx)

i40 : o39*49

            12       11        10        9        8        7        6        5  
      - 144x   - 800x   - 1560x   - 1512x  + 1036x  + 1496x  + 2758x  + 2454x  -
o40 = --------------------------------------------------------------------------
                                        8      7     6      5     4     3     2
                                      4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 2x  
      --------------------------------------------------------------------------
           4       3       2
       702x  - 801x  - 415x  + 136x + 343
      -----------------------------------

      + 1

o40 : frac(Rx)

i41 : o39*[1@([1@[1Po39*49)/49

            12       11        10        9        8        7        6        5  
      - 144x   - 800x   - 1560x   - 1512x  + 1036x  + 1496x  + 2758x  + 2454x  -
o41 = --------------------------------------------------------------------------
                                    8       7       6       5       4       3   
                                196x  + 784x  + 196x  - 784x  - 147x  + 196x  - 
      --------------------------------------------------------------------------
           4       3       2
       702x  - 801x  - 415x  + 136x + 343
      -----------------------------------
         2
      98x  + 49

o41 : frac(Rx)

i42 : (o39*49)/49i42 : [5Po39*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V

        144  12   800  11   1560  10   216  9   148  8   1496  7   394  6   2454
      - ---*x   - ---*x   - ----*x   - ---*x  + ---*x  + ----*x  + ---*x  + ----
         49        49        49         7        7        49        7        49 
o42 = --------------------------------------------------------------------------
                                            8      7     6      5     4     3   
                                          4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 
      --------------------------------------------------------------------------
        5   702  4   801  3   415  2   136
      *x  - ---*x  - ---*x  - ---*x  + ---*x + 7
             49       49       49       49
      ------------------------------------------
        2
      2x  + 1

o42 : frac(Rx)

i43 : num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q

        144  12   800  11   1560  10   216  9   148  8   1496  7   394  6   2454
      - ---*x   - ---*x   - ----*x   - ---*x  + ---*x  + ----*x  + ---*x  + ----
         49        49        49         7        7        49        7        49 
o43 = --------------------------------------------------------------------------
                                            8      7     6      5     4     3   
                                          4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 
      --------------------------------------------------------------------------
        5   702  4   801  3   415  2   136
      *x  - ---*x  - ---*x  - ---*x  + ---*x + 7
             49       49       49       49
      ------------------------------------------
        2
      2x  + 1

o43 : frac(Rx)

i44 : ytic=poly "2x3+6x2+2x"/poly "x4+4x3+2x2+1"

          3     2
        2x  + 6x  + 2x
o44 = ------------------
       4     3     2
      x  + 4x  + 2x  + 1

o44 : frac(Rx)

i45 : ytic=poly "2x3+6x2+2x"/poly "x4+4x3+2x2+1"i45 : [3Pnum/(V*U) - (diff(x,V)*Q2+diff(x,B2))/Vi45 : ytic=poly "2x3+6x2+2x"/poly "x4+4x3+2x2+1"i45 : [3Pnum/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic

        144  11   440  10   928  9   480  8   128  7   1290  6   1662  5   710  
      - ---*x   - ---*x   - ---*x  - ---*x  + ---*x  + ----*x  + ----*x  + ---*x
         49        49        49       49       49       49        49        49  
o45 = --------------------------------------------------------------------------
                                     8      7     6      5     4     3     2
                                   4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 2x  + 1
      --------------------------------------------------------------------------
      4   79  3   639  2    8
        + --*x  - ---*x  + --*x + 7
          49       49      49
      -----------------------------

o45 : frac(Rx)

i46 : num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici46 : [1@h[1@ [1@=[1@ 

        144  11   440  10   928  9   480  8   128  7   1290  6   1662  5   710  
      - ---*x   - ---*x   - ---*x  - ---*x  + ---*x  + ----*x  + ----*x  + ---*x
         49        49        49       49       49       49        49        49  
o46 = --------------------------------------------------------------------------
                                     8      7     6      5     4     3     2
                                   4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 2x  + 1
      --------------------------------------------------------------------------
      4   79  3   639  2    8
        + --*x  - ---*x  + --*x + 7
          49       49      49
      -----------------------------

o46 : frac(Rx)

i47 : h*49

            11       10       9       8       7        6        5       4      3
      - 144x   - 440x   - 928x  - 480x  + 128x  + 1290x  + 1662x  + 710x  + 79x 
o47 = --------------------------------------------------------------------------
                                8      7     6      5     4     3     2
                              4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 2x  + 1
      --------------------------------------------------------------------------
             2
       - 639x  + 8x + 343
      -------------------

o47 : frac(Rx)

i48 : h*[1@(h*49)/49

            11       10       9       8       7        6        5       4      3
      - 144x   - 440x   - 928x  - 480x  + 128x  + 1290x  + 1662x  + 710x  + 79x 
o48 = --------------------------------------------------------------------------
                            8       7       6       5       4       3      2
                        196x  + 784x  + 196x  - 784x  - 147x  + 196x  - 98x  + 4
      --------------------------------------------------------------------------
             2
       - 639x  + 8x + 343
      -------------------

      9

o48 : frac(Rx)

i49 : V

        2
o49 = 2x  - 1

o49 : Rx

i50 : B2

            1
o50 = - x - -
            2

o50 : Rx

i51 : h

        144  11   440  10   928  9   480  8   128  7   1290  6   1662  5   710  
      - ---*x   - ---*x   - ---*x  - ---*x  + ---*x  + ----*x  + ----*x  + ---*x
         49        49        49       49       49       49        49        49  
o51 = --------------------------------------------------------------------------
                                     8      7     6      5     4     3     2
                                   4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 2x  + 1
      --------------------------------------------------------------------------
      4   79  3   639  2    8
        + --*x  - ---*x  + --*x + 7
          49       49      49
      -----------------------------

o51 : frac(Rx)

i52 : [1P(h*49)/49

            11       10       9       8       7        6        5       4      3
      - 144x   - 440x   - 928x  - 480x  + 128x  + 1290x  + 1662x  + 710x  + 79x 
o52 = --------------------------------------------------------------------------
                            8       7       6       5       4       3      2
                        196x  + 784x  + 196x  - 784x  - 147x  + 196x  - 98x  + 4
      --------------------------------------------------------------------------
             2
       - 639x  + 8x + 343
      -------------------

      9

o52 : frac(Rx)

i53 : [16@(reverse-i-search)`':h': (h*49)/[17Pi53 : (h*49)/49i53 : h[[1P(h*49)/49i53 : [5Ph*4 = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic

        144  11   440  10   928  9   480  8   128  7   1290  6   1662  5   710  
      - ---*x   - ---*x   - ---*x  - ---*x  + ---*x  + ----*x  + ----*x  + ---*x
         49        49        49       49       49       49        49        49  
o53 = --------------------------------------------------------------------------
                                     8      7     6      5     4     3     2
                                   4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 2x  + 1
      --------------------------------------------------------------------------
      4   79  3   639  2    8
        + --*x  - ---*x  + --*x + 7
          49       49      49
      -----------------------------

o53 : frac(Rx)

i54 : num/(V*U)

        6     5     4     3    2
      2x  + 4x  + 7x  - 3x  - x  - 8x - 8
o54 = -----------------------------------
             6     5     4     3
           2x  + 8x  + 3x  - 4x  - 1

o54 : frac(Rx)

i55 : num/(V*U)i55 : h = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic

        144  11   440  10   928  9   480  8   128  7   1290  6   1662  5   710  
      - ---*x   - ---*x   - ---*x  - ---*x  + ---*x  + ----*x  + ----*x  + ---*x
         49        49        49       49       49       49        49        49  
o55 = --------------------------------------------------------------------------
                                     8      7     6      5     4     3     2
                                   4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 2x  + 1
      --------------------------------------------------------------------------
      4   79  3   639  2    8
        + --*x  - ---*x  + --*x + 7
          49       49      49
      -----------------------------

o55 : frac(Rx)

i56 : h = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici56 : [1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P(diff(x,V)*Q2+diff(x,B2))/V + Q2*yt

      144  8   32  7   376  6   440  5   24  4   544  3   418  2   256
      ---*x  + --*x  + ---*x  - ---*x  + --*x  - ---*x  - ---*x  + ---*x + 1
       49       7       49       49      49       49       49       49
o56 = ----------------------------------------------------------------------
                                     4     2
                                   4x  - 4x  + 1

o56 : frac(Rx)

i57 : (diff(x,V)*Q2+diff(x,B2))/Vi57 : h = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici57 : [1P[1P[1P[1Pnum/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*yt

        144  12   800  11   1560  10   216  9   148  8   1496  7   394  6   2454
      - ---*x   - ---*x   - ----*x   - ---*x  + ---*x  + ----*x  + ---*x  + ----
         49        49        49         7        7        49        7        49 
o57 = --------------------------------------------------------------------------
                                            8      7     6      5     4     3   
                                          4x  + 16x  + 4x  - 16x  - 3x  + 4x  - 
      --------------------------------------------------------------------------
        5   702  4   801  3   415  2   136
      *x  - ---*x  - ---*x  - ---*x  + ---*x + 7
             49       49       49       49
      ------------------------------------------
        2
      2x  + 1

o57 : frac(Rx)

i58 : num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/Vi58 : [12P(diff(x,V)*Q2+diff(x,B2))/V

      144  8   32  7   376  6   440  5   24  4   544  3   418  2   256
      ---*x  + --*x  + ---*x  - ---*x  + --*x  - ---*x  - ---*x  + ---*x + 1
       49       7       49       49      49       49       49       49
o58 = ----------------------------------------------------------------------
                                     4     2
                                   4x  - 4x  + 1

o58 : frac(Rx)

i59 : Q2

      36  7   8  6   94  5   110  4    6  3   136  2   80     64
      --*x  + -*x  + --*x  - ---*x  + --*x  - ---*x  - --*x + --
      49      7      49       49      49       49      49     49
o59 = ----------------------------------------------------------
                                  2
                                2x  - 1

o59 : frac(Rx)

i60 : [16@(reverse-i-search)`':A': A*V+R*[17Pi60 : A*V+R*[16@(reverse-i-search)`':[5PQ': i60 : Q[A*V+R*Q[R=(gcdCoefficients (V,Q))#2i60 : A=(gcdCoefficients (V,Q))#1i60 : [4P(gcdCoefficients (V,Q))#1i60 : [2PgcdCoefficients (V,Q)[2[Ki60 : [7PV=poly "2x2-1"i60 : gcd(Q,poly "2x2-1")i60 : T2=num[2PQ=gcd(num,S2)i60 : S2=poly "4x4+6x3+6x2+6x"i60 : [10@num=poly "2x6+4x5+7x4-3x3-x2-8x-8"i60 : Rx=QQ[x][Ki60 : num=poly "2x6+4x5+7x4-3x3-x2-8x-8"i60 : [10PS2=poly "4x4+6x3+6x2+6x"i60 : [13Pgcd(num,S2)i60 : [7PQ=T2=ngcd(Q,poly "2x2-1")i60 : [5PV=poly "2x2-1"i60 : gcdCoefficients (V,Q)[2[1P#1i60 : [2@(gcdCoefficients (V,Q))[Ki60 : A=(gcdCoefficients (V,Q))#1i60 : R=(gcdCoefficients (V,Q))#2i60 : V[A*V+R*T2[K(T2*R)/Vi60 : V[diff(x,V)i60 : B2=(T2*R)%Vi60 : Q2=(T2*R)/Vi60 : diff(x,V)*Q2+diff(x,B2)i60 : [12PQ2=(T2*R)/V

      36  7   8  6   94  5   110  4    6  3   136  2   80     64
      --*x  + -*x  + --*x  - ---*x  + --*x  - ---*x  - --*x + --
      49      7      49       49      49       49      49     49
o60 = ----------------------------------------------------------
                                  2
                                2x  - 1

o60 : frac(Rx)

i61 : Q2=(T2*R)/Vi61 : [1P[1P[1P(T2*R)/

      18  5   4  4   8  3   41  2   31     177
o61 = --*x  + -*x  + -*x  - --*x  + --*x - ---
      49      7      7      49      49      98

o61 : Rx

i62 : (T2*R)//Vi62 : [1@Q[1@2[1@=

      18  5   4  4   8  3   41  2   31     177
o62 = --*x  + -*x  + -*x  - --*x  + --*x - ---
      49      7      7      49      49      98

o62 : Rx

i63 : Q2=(T2*R)//Vi63 : [3P(T2*R)//Vi63 : [2@Q2=(T2*R)/(diff(x,V)*Q2+diff(x,B2))/V

      72  6   16  5   32  4   164  3   124  2   354
      --*x  + --*x  + --*x  - ---*x  + ---*x  - ---*x - 1
      49       7       7       49       49       49
o63 = ---------------------------------------------------
                              2
                            2x  - 1

o63 : frac(Rx)

i64 : (diff(x,V)*Q2+diff(x,B2))/Vi64 : [15PQ2=(T2*R)//Vi64 : [3P(T2*R)//Vi64 : [2@Q2=(T2*R)/(diff(x,V)*Q2+diff(x,B2))/Vi64 : [12@num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/Vi64 : [12P(diff(x,V)*Q2+diff(x,B2))/Vi64 : h = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic

        72  9   220  8   500  7   50  6   186  5   470  4   640  3   394  2   13
      - --*x  - ---*x  - ---*x  - --*x  - ---*x  + ---*x  + ---*x  + ---*x  + --
        49       49       49       7       49       49       49       49       4
o64 = --------------------------------------------------------------------------
                                    6     5     4     3
                                  2x  + 8x  + 3x  - 4x  - 1
      --------------------------------------------------------------------------
      9
      -*x - 7
      9
      -------

o64 : frac(Rx)

i65 : Q2

      18  5   4  4   8  3   41  2   31     177
o65 = --*x  + -*x  + -*x  - --*x  + --*x - ---
      49      7      7      49      49      98

o65 : Rx

i66 : Q2*V+B2

      36  7   8  6   94  5   110  4    6  3   136  2   80     64
o66 = --*x  + -*x  + --*x  - ---*x  + --*x  - ---*x  - --*x + --
      49      7      49       49      49       49      49     49

o66 : Rx

i67 : R*T2

      36  7   8  6   94  5   110  4    6  3   136  2   80     64
o67 = --*x  + -*x  + --*x  - ---*x  + --*x  - ---*x  - --*x + --
      49      7      49       49      49       49      49     49

o67 : Rx

i68 : R*[3@Q2*V+B[K*V+Bh = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici68 : [26P(diff(x,V)*Q2+diff(x,B2))/Vi68 : h = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici68 : [26P(diff(x,V)*Q2+diff(x,B2))/Vi68 : h = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici68 : [26P(diff(x,V)*Q2+diff(x,B2))/V

      72  6   16  5   32  4   164  3   124  2   354
      --*x  + --*x  + --*x  - ---*x  + ---*x  - ---*x - 1
      49       7       7       49       49       49
o68 = ---------------------------------------------------
                              2
                            2x  - 1

o68 : frac(Rx)

i69 : (diff(x,V)*Q2+diff(x,B2))/Vi69 : R*T2[3@Q2*V+Bh = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici69 : Q2[K*V+B[3PR*(diff(x,V)*Q2+diff(x,B2))/Vi69 : [KA

        36  3   38  2   48
o69 = - --*x  - --*x  - --*x - 1
        49      49      49

o69 : Rx

i70 : (diff(x,V)*Q2+diff(x,B2))/Vi70 : R*T2[3@Q2*V+Bh = num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytici70 : h = [1@A[1@*

        144  9   440  8   1000  7   128  6   764  5   254  4   1574  3   1180  2
      - ---*x  - ---*x  - ----*x  - ---*x  - ---*x  + ---*x  + ----*x  + ----*x 
         49       49       49        7        49       49       49        49    
o70 = --------------------------------------------------------------------------
                                       6     5     4     3
                                     2x  + 8x  + 3x  - 4x  - 1
      --------------------------------------------------------------------------
         1307
       + ----*x + 9
          49
      -------------

o70 : frac(Rx)

i71 : h*49

            9       8        7       6       5       4        3        2
      - 144x  - 440x  - 1000x  - 896x  - 764x  + 254x  + 1574x  + 1180x  + 1307x
o71 = --------------------------------------------------------------------------
                                    6     5     4     3
                                  2x  + 8x  + 3x  - 4x  - 1
      --------------------------------------------------------------------------
       + 441
      ------

o71 : frac(Rx)

i72 : gcnumerator h

        144  9   440  8   1000  7   128  6   764  5   254  4   1574  3   1180  2
o72 = - ---*x  - ---*x  - ----*x  - ---*x  - ---*x  + ---*x  + ----*x  + ----*x 
         49       49       49        7        49       49       49        49    
      --------------------------------------------------------------------------
        1307
      + ----*x + 9
         49

o72 : Rx

i73 : denominator h

        6     5     4     3
o73 = 2x  + 8x  + 3x  - 4x  - 1

o73 : Rx

i74 : gcd(numerator h, denominator h)

o74 = 1

o74 : Rx

i75 : h

        144  9   440  8   1000  7   128  6   764  5   254  4   1574  3   1180  2
      - ---*x  - ---*x  - ----*x  - ---*x  - ---*x  + ---*x  + ----*x  + ----*x 
         49       49       49        7        49       49       49        49    
o75 = --------------------------------------------------------------------------
                                       6     5     4     3
                                     2x  + 8x  + 3x  - 4x  - 1
      --------------------------------------------------------------------------
         1307
       + ----*x + 9
          49
      -------------

o75 : frac(Rx)

i76 : B2

            1
o76 = - x - -
            2

o76 : Rx

i77 : h

        144  9   440  8   1000  7   128  6   764  5   254  4   1574  3   1180  2
      - ---*x  - ---*x  - ----*x  - ---*x  - ---*x  + ---*x  + ----*x  + ----*x 
         49       49       49        7        49       49       49        49    
o77 = --------------------------------------------------------------------------
                                       6     5     4     3
                                     2x  + 8x  + 3x  - 4x  - 1
      --------------------------------------------------------------------------
         1307
       + ----*x + 9
          49
      -------------

o77 : frac(Rx)

i78 : factor(denominator h)

                2       3     2
o78 = (x + 1)(2x  - 1)(x  + 3x  - x + 1)

o78 : Expression of class Product

i79 : factor(U)

               3     2
o79 = (x + 1)(x  + 3x  - x + 1)

o79 : Expression of class Product

i80 : U

       4     3     2
o80 = x  + 4x  + 2x  + 1

o80 : Rx

i81 : h

        144  9   440  8   1000  7   128  6   764  5   254  4   1574  3   1180  2
      - ---*x  - ---*x  - ----*x  - ---*x  - ---*x  + ---*x  + ----*x  + ----*x 
         49       49       49        7        49       49       49        49    
o81 = --------------------------------------------------------------------------
                                       6     5     4     3
                                     2x  + 8x  + 3x  - 4x  - 1
      --------------------------------------------------------------------------
         1307
       + ----*x + 9
          49
      -------------

o81 : frac(Rx)

i82 : diff(x,x/(x+1))
stdio:82:1:(1):[0]: expected a polynomial ring

i83 : B2

            1
o83 = - x - -
            2

o83 : Rx

i84 : num

        6     5     4     3    2
o84 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o84 : Rx

i85 : U

       4     3     2
o85 = x  + 4x  + 2x  + 1

o85 : Rx

i86 : V

        2
o86 = 2x  - 1

o86 : Rx

i87 : S1

o87 = S1

o87 : Symbol

i88 : S2

        4     3     2
o88 = 4x  + 6x  + 6x  + 6x

o88 : Rx

i89 : [K[16@(reverse-i-search)`':S': S[1@2':=': S2=poly "4x4+6x3+6x2+6[19Pi89 : S2=[1@-

          4     3     2
o89 = - 4x  - 6x  - 6x  - 6x

o89 : Rx

i90 : f2

o90 = f2

o90 : Symbol

i91 : f

o91 = f

o91 : Symbol

i92 : [16@(reverse-i-search)`':T': R*T[1@2': R=': T2=n[19Pi92 : T2=ngcd(Q,poly "2x2-1")i92 : [5PV=poly "2x2-1"i92 : gcdCoefficients (V,Q)[2[1P#1i92 : [2@(gcdCoefficients (V,Q))[Ki92 : A=(gcdCoefficients (V,Q))#1i92 : R=(gcdCoefficients (V,Q))#2i92 : V[A*V+R*T2[K[16@(reverse-i-search)`':Q': A*V+R[2P=': Q=[18Pi92 : 

          4     3     2
o92 = - 4x  - 6x  - 6x  - 6x

o92 : Rx

i93 : [16@(reverse-i-search)`':A': h = A*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic(reverse-i-search)`A': h =[27P=': A=(gcdCoefficients (V,Q))#1(reverse-i-search)`A=': [18Pi93 : 

        36  3   38  2   48
o93 = - --*x  - --*x  - --*x - 1
        49      49      49

o93 : Rx

i94 : [16@(reverse-i-search)`':R': R*T[24@=': R=(gcdCoefficients (V,Q))#(reverse-i-search)`R=': [18Pi94 : 

        18      8
o94 = - --*x + --
        49     49

o94 : Rx

i95 : [16@(reverse-i-search)`':A': A=(gcdCoefficients (V,Q))#1(reverse-i-search)`A':*': h = A*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic(reverse-i-search)`A*': h =V': A*V+R*Q[[19Pi95 : 

o95 = 1

o95 : Rx

i96 : [16@(reverse-i-search)`':Q': A*V+R2': h = A*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*yti(reverse-i-search)`Q2=': Q2=(T2*R)//V[19Pi96 : 

        18  5   4  4   8  3   41  2   31     177
o96 = - --*x  - -*x  - -*x  + --*x  - --*x + ---
        49      7      7      49      49      98

o96 : Rx

i97 : [16@(reverse-i-search)`':B': B[1@2':=': B2=(T2*R)%[19Pi97 : 

          1
o97 = x + -
          2

o97 : Rx

i98 : [16@(reverse-i-search)`':h': i98 : h[[16@(reverse-i-search)`':[1@h': ': h = A*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic(reverse-i-search)`h ': [18Pi98 : h = A*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic

               2
             6x  + 5x + 7
o98 = -------------------------
        6     5     4     3
      2x  + 8x  + 3x  - 4x  - 1

o98 : frac(Rx)

i99 : denominator h

        6     5     4     3
o99 = 2x  + 8x  + 3x  - 4x  - 1

o99 : Rx

i100 : denominator hi100 : [1@f[1@a[1@c[1@t[1@o[1@r[1@(denominator h)

                 2       3     2
o100 = (x + 1)(2x  - 1)(x  + 3x  - x + 1)

o100 : Expression of class Product

i101 : 64/27

       64
o101 = --
       27

o101 : QQ

i102 : 64/2[1@4[1@*64/24*[1@(64/27)

       256
o102 = ---
        27

o102 : QQ

i103 : 4*(64/27)i103 : [1@9[1@-

         13
o103 = - --
         27

o103 : QQ

i104 : 3^3

o104 = 27

i105 : sqrt(13)2/27)

o105 = .693888666488711

o105 : RR (of precision 53)

i106 : use QQ

o106 = QQ

o106 : Ring

i107 : use sqrt(13/27)

o107 = .693888666488711

o107 : RR (of precision 53)

i108 : sqrt(13/27)i108 : [Ksqrt(2)

o108 = 1.4142135623731

o108 : RR (of precision 53)

i109 : 2^1/2

o109 = 1

o109 : QQ

i110 : 2^1/[1@(1/2)

o110 = 1.4142135623731

o110 : RR (of precision 53)

i111 : num

         6     5     4     3    2
o111 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o111 : Rx

i112 : h

                2
              6x  + 5x + 7
o112 = -------------------------
         6     5     4     3
       2x  + 8x  + 3x  - 4x  - 1

o112 : frac(Rx)

i113 : sub(h,x=>sqrt(2)/2)
stdio:113:1:(1):[0]: expected x to be a generator of frac(Rx)

i114 : sqrt(2)/2

o114 = .707106781186548

o114 : RR (of precision 53)

i115 : num(h)
stdio:115:1:(1):[0]: no method for adjacent objects:
--              6     5     4     3    2
--            2x  + 4x  + 7x  - 3x  - x  - 8x - 8 (of class Rx)
--                     2
--                   6x  + 5x + 7
--    SPACE   ------------------------- (of class frac(Rx))
--              6     5     4     3
--            2x  + 8x  + 3x  - 4x  - 1

i116 : numerator h

         2
o116 = 6x  + 5x + 7

o116 : Rx

i117 : numerator hi117 : [1@d[1@u[1@[1[1[1P[1@s[1@u[1@b[1@(numerator h, x=>1)

o117 = 18

i118 : sub(numerator h, x=>[1Psqrt(2)

o118 = 26.0710678118655

o118 : RR (of precision 53)

i119 : sub(numerator h, x=>sqrt(2)/2

o119 = 13.5355339059327

o119 : RR (of precision 53)

i120 : y

o120 = y

o120 : Symbol

i121 : h

                2
              6x  + 5x + 7
o121 = -------------------------
         6     5     4     3
       2x  + 8x  + 3x  - 4x  - 1

o121 : frac(Rx)

i122 : [15@(reverse-i-search)`':h': ': h = A*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic(reverse-i-search)`h ': [17Pi122 : 

                2
              6x  + 5x + 7
o122 = -------------------------
         6     5     4     3
       2x  + 8x  + 3x  - 4x  - 1

o122 : frac(Rx)

i123 : ytic

           3     2
         2x  + 6x  + 2x
o123 = ------------------
        4     3     2
       x  + 4x  + 2x  + 1

o123 : frac(Rx)

i124 : B2

           1
o124 = x + -
           2

o124 : Rx

i125 : Q2

         18  5   4  4   8  3   41  2   31     177
o125 = - --*x  - -*x  - -*x  + --*x  - --*x + ---
         49      7      7      49      49      98

o125 : Rx

i126 : V*Q2+B2

         36  7   8  6   94  5   110  4    6  3   136  2   80     64
o126 = - --*x  - -*x  - --*x  + ---*x  - --*x  + ---*x  + --*x - --
         49      7      49       49      49       49      49     49

o126 : Rx

i127 : T2

         6     5     4     3    2
o127 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o127 : Rx

i128 : R

         18      8
o128 = - --*x + --
         49     49

o128 : Rx

i129 : R*T2

         36  7   8  6   94  5   110  4    6  3   136  2   80     64
o129 = - --*x  - -*x  - --*x  + ---*x  - --*x  + ---*x  + --*x - --
         49      7      49       49      49       49      49     49

o129 : Rx

i130 : R*T[[5@V*Q2+B2

         36  7   8  6   94  5   110  4    6  3   136  2   80     64
o130 = - --*x  - -*x  - --*x  + ---*x  - --*x  + ---*x  + --*x - --
         49      7      49       49      49       49      49     49

o130 : Rx

i131 : [15@(reverse-i-search)`':A': h = A*num/(V*U) - (diff(x,V)*Q2+diff(x,B2))/V + Q2*ytic(reverse-i-search)`A': h =[1@*': h =V': A*V+R*Q[[18Pi131 : 

o131 = 1

o131 : Rx

i132 : V

         2
o132 = 2x  - 1

o132 : Rx

i133 : Q

           4     3     2
o133 = - 4x  - 6x  - 6x  - 6x

o133 : Rx

i134 : sub(x^4+4x^[1@*x^3+2*x^2+1,x=>y)
stdio:134:1:(1):[0]: no method found for applying ring to:
     argument   :  y (of class Symbol)

i135 : sub(x^4+4*x^3+2*x^2+1,x=>[1Px

        4     3     2
o135 = x  + 4x  + 2x  + 1

o135 : Rx

i136 : sub(x^4+4*x^3+2*x^2+1,x=>[1@(x+1))

        4     3      2
o136 = x  + 8x  + 20x  + 20x + 8

o136 : Rx

i137 : sub(x^4+4*x^3+2*x^2+1,x=>(x+1)[1P[1@s[1@q[1@r[1@t[1@2
stdio:137:28:(1):[0]: no method for binary operator + applied to objects:
--            x (of class Rx)
--      +     sqrt2 (of class Symbol)

i138 : Qsqrt2 = QQ[sqrt2]/(sqrt2^2-2)

o138 = Qsqrt2

o138 : QuotientRing

i139 : Rx=Qsqrt2[x]

o139 = Rx

o139 : PolynomialRing

i140 : Rx=Qsqrt2[x]i140 : Qsqrt2 = QQ[sqrt2]/(sqrt2^2-2)i140 : [5@sub(x^4+4*x^3+2*x^2+1,x=>(x+sqrt2))

        4                3                  2
o140 = x  + (4sqrt2 + 4)x  + (12sqrt2 + 14)x  + (12sqrt2 + 24)x + 8sqrt2 + 9

o140 : Rx

i141 : sub(x^4+4*x^3+2*x^2+1,x=>(x+sqrt2)[1@1[1P[1P[1P[1P[1P

        4     3      2
o141 = x  + 8x  + 20x  + 20x + 8

o141 : Rx

i142 : sub(x^4+4*x^3+2*x^2+1,x=>(x+1[1P[1@-

        4     2
o142 = x  - 4x  + 4x

o142 : Rx

i143 : sub(x^4+4*x^3+2*x^2+1,x=>(x-1)[1P[1@x[1@=[1[1P[1@+[1P[1@s[1@q[1@r[1@t[1@2[1@/[1@2

        4                3                2                           9
o143 = x  + (2sqrt2 + 4)x  + (6sqrt2 + 5)x  + (3sqrt2 + 6)x + sqrt2 + -
                                                                      4

o143 : Rx

i144 : sub(o143,x=>(x-sqrt2/2))

        4     3     2
o144 = x  + 4x  + 2x  + 1

o144 : Rx

i145 : diff(x,o143)

         3                 2
o145 = 4x  + (6sqrt2 + 12)x  + (12sqrt2 + 10)x + 3sqrt2 + 6

o145 : Rx

i146 : Rxy=Rx[y]/(ynum

         6     5     4     3    2
o146 = 2x  + 4x  + 7x  - 3x  - x  - 8x - 8

o146 : QQ [x]

i147 : U

        4     3     2
o147 = x  + 4x  + 2x  + 1

o147 : QQ [x]

i148 : Rxy = Rx[y]/(y^2 - U)
stdio:148:18:(1):[0]: expected pair to have a method for '-'

i149 : [15@(reverse-i-search)`':U': Rxy = Rx[y]/(y^2 - [16Pi149 : Rxy = Rx[y]/(y^2 - U)i149 : [K[15@(reverse-i-search)`':U': Rxy = Rx[y]/(y^2 - (reverse-i-search)`U=': U=poly "x4+4x3+2x2+1[17Pi149 : [1P[1P[1@R[1@x[1@y[1@ [1@=[1@ [1@R[1@x[1@[[1@y[1@][1@/[1@([1@y[1@^[1@2[1@ [1@-[1@ poly "x4+4x3+2x2+1")

o149 = Rxy

o149 : QuotientRing

i150 : use Rxy

o150 = Rxy

o150 : QuotientRing

i151 : (x-sqrt2/2)

           1
o151 = x - -*sqrt2
           2

o151 : Rx

i152 : (x-sqrt2/2) + (y-(1/2+sqrt2))

               3         1
o152 = y + x - -*sqrt2 - -
               2         2

o152 : Rxy

i153 : (x-sqrt2/2) + (y-(1/2+sqrt2))i153 : [1@i[1@1[1@5[1@2[1@ [1@*[1@ ([1@(x-sqrt2/2) + (y-(1/2+sqrt2))[1@-
stdio:153:6:(1):[0]: no method for binary operator * applied to objects:
--            i152 (of class Symbol)
--                      3         1
--      *     - y + x - -*sqrt2 - - (of class Rxy)
--                      2         2

i154 : i152 * ((x-sqrt2/2) + (-y-(1/2+sqrt2)))i154 : [1P[1@o

          4     3    2                     9      2   3         3
o154 = - x  - 4x  - x  + (- 3sqrt2 - 1)x + -*sqrt2  + -*sqrt2 - -
                                           4          2         4

o154 : Rxy

i155 : o154/(x-sqrt2/2)

            4       3      2                              2
       - 32x  - 128x  - 32x  + (- 96sqrt2 - 32)x + 72sqrt2  + 48sqrt2 - 24
o155 = -------------------------------------------------------------------
                                  32x - 16sqrt2

o155 : frac(Rxy)

i156 : o154/(x-sqrt2/2)i156 : o154/[1@

          3      1            2      1      2                  1      3        2
o156 = - x  + (- -*sqrt2 - 4)x  + (- -*sqrt2  - 2sqrt2 - 1)x - -*sqrt2  - sqrt2 
                 2                   4                         8                
       -------------------------------------------------------------------------
         7
       - -*sqrt2 - 1
         2

o156 : Rxy

i157 : o154//(x-sqrt2/2/[1[1P[1@%

          1      4   1      3   1      2           3
o157 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o157 : Rxy

i158 : o154

          4     3    2                     9      2   3         3
o158 = - x  - 4x  - x  + (- 3sqrt2 - 1)x + -*sqrt2  + -*sqrt2 - -
                                           4          2         4

o158 : Rxy

i159 : o1sub(o154,x=>sqrt2/2)

          1      4   1      3   1      2           3
o159 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o159 : Rxy

i160 : sqrt2^2

o160 = 2

o160 : Qsqrt2

i161 : lift(o159,Qsqrt2)

          1      4   1      3   1      2           3
o161 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o161 : Qsqrt2

i162 : o161

          1      4   1      3   1      2           3
o162 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o162 : Qsqrt2

i163 : Qsqrt2

o163 = Qsqrt2

o163 : QuotientRing

i164 : sqrt2^4

o164 = 4

o164 : Qsqrt2

i165 : -(1/16)*sqrt2^4 - (1/2)*sqrt2^3 + (1/2)*sqrt2^2 + sqrt2 - (3/4)

o165 = 0

o165 : Qsqrt2

i166 : -(1/16)*sqrt2^4 - (1/2)*sqrt2^3 + (1/2)*sqrt2^2 + sqrt2 - (3/4)i166 : sqrt2^4[[1PQsqr[2Po1lift(o159,Qsqrt2)i166 : [10Psqrt2ub(o154,x=>sqrt2/2)i166 : o154[K%(x-sqrt2/2)

          1      4   1      3   1      2           3
o166 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o166 : Rxy

i167 : o154%(x-sqrt2/2)i167 : o154[1P[1@/[1@/

          3      1            2      1      2                  1      3        2
o167 = - x  + (- -*sqrt2 - 4)x  + (- -*sqrt2  - 2sqrt2 - 1)x - -*sqrt2  - sqrt2 
                 2                   4                         8                
       -------------------------------------------------------------------------
         7
       - -*sqrt2 - 1
         2

o167 : Rxy

i168 : o154//(x-sqrt2/2)i168 : o154/[1[1P[1@%

          1      4   1      3   1      2           3
o168 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o168 : Rxy

i169 : o154%(x-sqrt2/[1@//(x-sqrt2/2)i169 : o154[1P%(x-sqrt2/2)i169 : [47@-(1/16)*sqrt2^4 - (1/2)*sqrt2^3 + (1/2)*sqrt2^2 + sqrt2 - (3/4)i169 : o154%(x-sqrt2/2)[1@//(x-sqrt2/2)i169 : o154[1P%(x-sqrt2/2)i169 : [Ksub(o168, sqrt2=>sqrt2)

          1      4   1      3   1      2           3
o169 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o169 : Rxy

i170 : sub(o168, sqrt2=>sqrt[1@^[1@2=>[1P[1P[1P[1P
stdio:170:1:(1):[0]: expected 2 to be a generator of (Rx [y])/(y^2-x^4-4*x^3-2*x^2-1)

i171 : lift(o168, Qsqrt2)

          1      4   1      3   1      2           3
o171 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o171 : Qsqrt2

i172 : lift(o168, Qsqrt2)i172 : [3@sub(o168, sqrt2^2=>[2@=>sqrt2)i172 : [7Po154%(x-sqrt2/2/2)

          1      4   1      3   1      2           3
o172 = - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
         16          2          2                  4

o172 : Rxy

i173 : o154%(x-sqrt2/2)^2

               3         2                  11      2   7         1
o173 = (- sqrt2  - 4sqrt2  - 3sqrt2 + 1)x + --*sqrt2  + -*sqrt2 - -
                                             4          2         2

o173 : Rxy

i174 : sub(o173,x=>sqrt2/2)

         1      4         3   5      2            1
o174 = - -*sqrt2  - 2sqrt2  + -*sqrt2  + 4sqrt2 - -
         2                    4                   2

o174 : Rxy

i175 : -(1/2)*sqrt2^4-2*sqrt2^3+(5/4)*sqrt2^2+4*sqrt2-(1/2)

o175 = 0

o175 : Qsqrt2

i176 : -(1/2)*sqrt2^4-2*sqrt2^3+(5/4)*sqrt2^2+4*sqrt2-(1/2)i176 : [32Psub(o173,x=>sqrt2/2)i176 : [2Po154%(x-sqrt2/2)[Ki176 : [2@lift(o168, Qsqrt2)i176 : [3@sub(o168, sqrt2^2=>[2@=>sqrt2)i176 : [7Po154%(x-sqrt2/[1@//(x-sqrt2/2)i176 : o154[1P%(x-sqrt2/2)i176 : [47@-(1/16)*sqrt2^4 - (1/2)*sqrt2^3 + (1/2)*sqrt2^2 + sqrt2 - (3/4)i176 : sqrt2^4[[1PQsqr[2Po1Qsqr[2Po1lift(o159,Qsqrt2)i176 : [10Psqrt2ub(o154,x=>sqrt2/2)i176 : o154[K%(x-sqrt2/[1@//(x-sqrt2/[1P(x-sqrt2/2)i176 : o15[23@2 * ((x-sqrt2/2) + (-y-(1/2+sqrt2)))i176 : i152 * ((x-sqrt2/2) + (-y-(1/2+sqrt2)))i176 : [10P(x-sqrt2/2) + (y-(1/2+sqrt2[K + (y-(1/2+sqrt2))

               3         1
o176 = y + x - -*sqrt2 - -
               2         2

o176 : Rxy

i177 : (x-sqrt2/2) + (y-(1/2+sqrt2))i177 : [1@n[1@o[1@r[1@m([1@(x-sqrt2/2) + (y-(1/2+sqrt2)))
stdio:177:1:(1):[0]: no method found for applying numeric to:
     argument 1 :  infinity (of class InfiniteNumber)
     argument 2 :  infinity (of class InfiniteNumber)

i178 : norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i178 : [1P[1@N
stdio:178:1:(1):[0]: no method for adjacent objects:
--            Norm (of class Symbol)
--                    3         1
--    SPACE   y + x - -*sqrt2 - - (of class Rxy)
--                    2         2

i179 : Norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i179 : norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i179 : [6P(x-sqrt2/2) + (y-(1/2+sqrt2))i179 : [23@-(1/2)*sqrt2^4-2*sqrt2^3+(5/4)*sqrt2^2+4*sqrt2-(1/2)i179 : [23P(x-sqrt2/2) + (y-(1/2+sqrt2))i179 : [6@norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i179 : Norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i179 : [Ko154

          4     3    2                     9      2   3         3
o179 = - x  - 4x  - x  + (- 3sqrt2 - 1)x + -*sqrt2  + -*sqrt2 - -
                                           4          2         4

o179 : Rxy

i180 : o1[1@s[1@u[1@b[1@(o154, x => (x+sqrt2/2))

          4                  3      3      2               2      1      3  
o180 = - x  + (- 2sqrt2 - 4)x  + (- -*sqrt2  - 6sqrt2 - 1)x  + (- -*sqrt2  -
                                    2                             2         
       -------------------------------------------------------------------------
             2                   1      4   1      3   1      2           3
       3sqrt2  - 4sqrt2 - 1)x - --*sqrt2  - -*sqrt2  + -*sqrt2  + sqrt2 - -
                                16          2          2                  4

o180 : Rxy

i181 : sub(o154, x => (x+sqrt2/2))i181 : o154Norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i181 : norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i181 : [6P(x-sqrt2/2) + (y-(1/2+sqrt2))i181 : [23@-(1/2)*sqrt2^4-2*sqrt2^3+(5/4)*sqrt2^2+4*sqrt2-(1/2)i181 : [32Psub(o173,x=>sqrt2/2)i181 : [2Po154%(x-sqrt2/2)[Ki181 : [2@lift(o168, Qsqrt2)i181 : [3@sub(o168, sqrt2^2=>[2@=>sqrt2)i181 : [7Po154%(x-sqrt2/[1@//(x-sqrt2/2)i181 : o154[1P%(x-sqrt2/2)i181 : [47@-(1/16)*sqrt2^4 - (1/2)*sqrt2^3 + (1/2)*sqrt2^2 + sqrt2 - (3/4)

o181 = 0

o181 : Qsqrt2

i182 : -(1/2)*sqrt2^3 - 3*sqrt2^2 = 4*sq- 4 *sqrt2 - 1

o182 = - 5sqrt2 - 7

o182 : Qsqrt2

i183 : -(1/2)*sqrt2^3 - 3*sqrt2^2 - 4 *sqrt2 - 1i183 : -(1/16)*sqrt2^4 - (1/2)*sqrt2^3 + (1/2)*sqrt2^2 + sqrt2 - (3/4)i183 : [36Psub(o154, x => (x+sqrt2/2))i183 : o154sub(o154, x => (x+sqrt2/2))i183 : o154Norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i183 : norm((x-sqrt2/2) + (y-(1/2+sqrt2)))i183 : [6P(x-sqrt2/2) + (y-(1/2+sqrt2))

               3         1
o183 = y + x - -*sqrt2 - -
               2         2

o183 : Rxy

i184 : (x-sqrt2/2) + (y-(1/2+sqrt2))i184 : [1@o[1@1[1@8[1@3[1@ [1@*[1@ ([1@(x-sqrt2/2) + (y-(1/2+sqrt2))[1P[1[1P[1@+

                    4     3     2       9      2   5
o184 = (2x - 1)y + x  + 4x  + 3x  - x - -*sqrt2  + -
                                        4          4

o184 : Rxy

i185 : o183

               3         1
o185 = y + x - -*sqrt2 - -
               2         2

o185 : Rxy

i186 : o1[1@s[1@u[1@b[1@(o183, x=>sqrt/2, y=>1/2+sqrt2)
stdio:186:18:(1):[0]: no method for binary operator / applied to objects:
--            sqrt (of class CompiledFunction)
--      /     2 (of class ZZ)

i187 : sub(o183, x=>sqrt/2, y=>1/2+sqrt2[1P[1@;
stdio:187:18:(1):[0]: no method for binary operator / applied to objects:
--            sqrt (of class CompiledFunction)
--      /     2 (of class ZZ)

i188 : help (sub)

o188 = substitute -- substituting values for variables
       ***********************************************

       Synopsis
       ========

         * Usage: substitute(f,v)
                  sub(f,v)
         * Inputs:
             * f, a ring element, a matrix, an ideal, a module, a vector, or an
               expression over a ring R
             * v, a ring, a matrix, an option, or a list of options: variable =>
               value
         * Outputs:
             * An object of the same sort as f, obtained by substituting values
               for the variables in the ring R of f using v.


       Description
       ===========

       A convenient abbreviation for "substitute" is sub.


       This function allows you to substitute values for some variables.  There
       are three ways to describe the kind of substitution, depending on the
       second argument v.
         * give specific values for (some of) the variables
         * give a matrix, the entries determines the values of each of the
           variables
         * give a ring, the effect will be to substitute variables with
           variables of the same name, into this new ring


       +-------------------------------------------------+
       |i1 : A = QQ[a..f]; B = QQ[a..d]; C = ZZ/101[x,y];|
       +-------------------------------------------------+
       |i4 : F = 3*a^2-b-d+101*c                         |
       |                                                 |
       |       2                                         |
       |o4 = 3a  - b + 101c - d                          |
       |                                                 |
       |o4 : B                                           |
       +-------------------------------------------------+

       The following line substitutes values for a and b, and the result is in
       the same ring B of F.

       +---------------------------+
       |i5 : sub(F, {a=>1, b=>b^4})|
       |                           |
       |        4                  |
       |o5 = - b  + 101c - d + 3   |
       |                           |
       |o5 : B                     |
       +---------------------------+

       Substitute a by x, b by y and so on.  The result is a polynomial in the
       ring C.

       +------------------------------+
       |i6 : sub(F, matrix{{x,y,1,0}})|
       |                              |
       |       2                      |
       |o6 = 3x  - y                  |
       |                              |
       |o6 : C                        |
       +------------------------------+

       Using a ring as the second argument substitutes variables with the same
       name.  The following produces the polynomial F in the rings A and D.

       +-----------------------+
       |i7 : sub(F, A)         |
       |                       |
       |       2               |
       |o7 = 3a  - b + 101c - d|
       |                       |
       |o7 : A                 |
       +-----------------------+
       |i8 : D = B/(a*b*c*d);  |
       +-----------------------+
       |i9 : sub(F,D)          |
       |                       |
       |       2               |
       |o9 = 3a  - b + 101c - d|
       |                       |
       |o9 : D                 |
       +-----------------------+

       If the values of all of the variables are in a different ring, then the
       result will be in that ring.

       +----------------------------------------+
       |i10 : use ring F;                       |
       +----------------------------------------+
       |i11 : sub(F, {a=>1, b=>3, c=> 1, d=>13})|
       |                                        |
       |o11 = 88                                |
       +----------------------------------------+

       This can have strange results, if the values are all integers, but
       fractions are present.

       +--------------------------------------------+
       |i12 : sub(1/3*a*b, {a=>1, b=>1, c=>1, d=>1})|
       |                                            |
       |o12 = 1                                     |
       +--------------------------------------------+

       By changing one of the values to a rational number, we insure that the
       result will be rational.

       +------------------------------------------------------+
       |i13 : sub(1/3*a*b, {a=>1_QQ, b=>1, c=>1, d=>1})       |
       |                                                      |
       |      1                                               |
       |o13 = -                                               |
       |      3                                               |
       |                                                      |
       |o13 : QQ                                              |
       +------------------------------------------------------+


       If f is an ideal or a submodule of a free module over R, then
       substitution amounts to substitution in the matrix of generators of f.
       This is not the same as tensor product!

       +--------------------------------------+
       |i14 : use B;                          |
       +--------------------------------------+
       |i15 : M = image(vars B ++ vars B)     |
       |                                      |
       |o15 = image | a b c d 0 0 0 0 |       |
       |            | 0 0 0 0 a b c d |       |
       |                                      |
       |                              2       |
       |o15 : B-module, submodule of B        |
       +--------------------------------------+
       |i16 : N = substitute(M, {a=>b+c,c=>1})|
       |                                      |
       |o16 = image | b+c b 1 d 0   0 0 0 |   |
       |            | 0   0 0 0 b+c b 1 d |   |
       |                                      |
       |                              2       |
       |o16 : B-module, submodule of B        |
       +--------------------------------------+

       Although we cannot use substitute directly on modules which are not
       submodules, here is a useful idiom for moving a cokernel module to
       another ring.  One must be careful though: the degrees of the generators
       might not be the desired ones.

       +----------------------------------------------------------------+
       |i17 : M' = prune M                                              |
       |                                                                |
       |o17 = cokernel {1} | -b 0  -c 0  0  -d 0  0  0  0  0  0  |      |
       |               {1} | a  -c 0  0  -d 0  0  0  0  0  0  0  |      |
       |               {1} | 0  b  a  -d 0  0  0  0  0  0  0  0  |      |
       |               {1} | 0  0  0  c  b  a  0  0  0  0  0  0  |      |
       |               {1} | 0  0  0  0  0  0  -b 0  -c 0  0  -d |      |
       |               {1} | 0  0  0  0  0  0  a  -c 0  0  -d 0  |      |
       |               {1} | 0  0  0  0  0  0  0  b  a  -d 0  0  |      |
       |               {1} | 0  0  0  0  0  0  0  0  0  c  b  a  |      |
       |                                                                |
       |                             8                                  |
       |o17 : B-module, quotient of B                                   |
       +----------------------------------------------------------------+
       |i18 : N' = coker substitute(presentation M', {a=>b+c,c=>1})     |
       |                                                                |
       |o18 = cokernel {1} | -b  0  -1  0  0  -d  0   0  0   0  0  0   ||
       |               {1} | b+c -1 0   0  -d 0   0   0  0   0  0  0   ||
       |               {1} | 0   b  b+c -d 0  0   0   0  0   0  0  0   ||
       |               {1} | 0   0  0   1  b  b+c 0   0  0   0  0  0   ||
       |               {1} | 0   0  0   0  0  0   -b  0  -1  0  0  -d  ||
       |               {1} | 0   0  0   0  0  0   b+c -1 0   0  -d 0   ||
       |               {1} | 0   0  0   0  0  0   0   b  b+c -d 0  0   ||
       |               {1} | 0   0  0   0  0  0   0   0  0   1  b  b+c ||
       |                                                                |
       |                             8                                  |
       |o18 : B-module, quotient of B                                   |
       +----------------------------------------------------------------+


       Unevaluated expressions (i.e. from "hilbertSeries") may also have
       variables substituted in all of the ways mentioned so far.

       +--------------------------------------------------+
       |i19 : hf = hilbertSeries coker matrix{{a,b^3,d^5}}|
       |                                                  |
       |               3    4    5    6    8    9         |
       |      1 - T - T  + T  - T  + T  + T  - T          |
       |o19 = -----------------------------------         |
       |                           4                      |
       |                    (1 - T)                       |
       |                                                  |
       |o19 : Expression of class Divide                  |
       +--------------------------------------------------+
       |i20 : hf1 = reduceHilbert hf                      |
       |                                                  |
       |                 2     3     4     5    6         |
       |      1 + 2T + 3T  + 3T  + 3T  + 2T  + T          |
       |o20 = -----------------------------------         |
       |                    (1 - T)                       |
       |                                                  |
       |o20 : Expression of class Divide                  |
       +--------------------------------------------------+
       |i21 : use ring numerator hf;                      |
       +--------------------------------------------------+
       |i22 : sub(hf1, T => -1)                           |
       |                                                  |
       |      1                                           |
       |o22 = -                                           |
       |      2                                           |
       |                                                  |
       |o22 : Expression of class Divide                  |
       +--------------------------------------------------+

       Of course, we can change the ring too:

       +-------------------------------------------+
       |i23 : sub(hf, T => a)                      |
       |                                           |
       |         9    8    6    5    4    3        |
       |      - a  + a  + a  - a  + a  - a  - a + 1|
       |o23 = -------------------------------------|
       |                             4             |
       |                    (- a + 1)              |
       |                                           |
       |o23 : Expression of class Divide           |
       +-------------------------------------------+
       |i24 : value oo                             |
       |                                           |
       |         6     5     4     3     2         |
       |      - a  - 2a  - 3a  - 3a  - 3a  - 2a - 1|
       |o24 = -------------------------------------|
       |                      a - 1                |
       |                                           |
       |o24 : frac(B)                              |
       +-------------------------------------------+
       |i25 : oo == value sub(hf1, T=>a)           |
       |                                           |
       |o25 = true                                 |
       +-------------------------------------------+


       If you plan on using the same substitution over and over, it is wise to
       create a ring map which will perform the same substitution.


       For example, in the first example above, we can make a ring map G, and
       then apply it to F.

       +---------------------------------+
       |i26 : use B;                     |
       +---------------------------------+
       |i27 : G = map(B,B,{a=>1, b=>b^4})|
       |                                 |
       |                   4             |
       |o27 = map(B,B,{1, b , c, d})     |
       |                                 |
       |o27 : RingMap B <--- B           |
       +---------------------------------+
       |i28 : G F                        |
       |                                 |
       |         4                       |
       |o28 = - b  + 101c - d + 3        |
       |                                 |
       |o28 : B                          |
       +---------------------------------+

       Caveat
       ======

       The specified substitution is not checked to see whether the
       corresponding ring homomorphism is well-defined; this may produce
       surprising results, especially if rational coefficients are converted to
       integer coefficients.

       See also
       ========

         * "RingMap" -- the class of all ring maps
         * "hilbertSeries" -- compute the Hilbert series
         * "value" -- evaluate
         * "Expression" -- the class of all expressions

       Ways to use substitute :
       ========================

         * substitute(Divide,Thing)
         * substitute(Ideal,List)
         * substitute(Ideal,Matrix)
         * substitute(Ideal,Option)
         * substitute(Ideal,Ring)
         * substitute(Ideal,RingFamily)
         * substitute(Matrix,List)
         * substitute(Matrix,Matrix)
         * substitute(Matrix,Option)
         * substitute(Matrix,Ring)
         * substitute(Matrix,RingFamily)
         * substitute(Matrix,ZZ)
         * substitute(Module,List)
         * substitute(Module,Matrix)
         * substitute(Module,Option)
         * substitute(Module,Ring)
         * substitute(Module,RingFamily)
         * substitute(Number,Ring)
         * substitute(Number,RingFamily)
         * substitute(Power,Thing)
         * substitute(Product,Thing)
         * substitute(RingElement,List)
         * substitute(RingElement,Matrix)
         * substitute(RingElement,Option)
         * substitute(RingElement,Ring)
         * substitute(RingElement,RingFamily)
         * substitute(Sum,Thing)
         * substitute(Vector,List)
         * substitute(Vector,Matrix)
         * substitute(Vector,Option)
         * substitute(Vector,Ring)
         * substitute(Vector,RingFamily)

o188 : DIV

i189 : help (sub)i189 : [24@sub(o183, x=>sqrt/2; y=>1/2+sqrt2, y=>1/2+sqrt2)i189 : sub(o183, [1@{x=>sqrt/2, y=>1/2+sqrt2}
stdio:189:19:(1):[0]: no method for binary operator / applied to objects:
--            sqrt (of class CompiledFunction)
--      /     2 (of class ZZ)

i190 : sub(o183, {x=>sqrt/2, y=>1/2+sqrt2[1@2

o190 = 0

o190 : Qsqrt2

i191 : sub(o183, {x=>sqrt2/2, y=>1/2+sqrt2>[1@-1/2[1P[1@-

o191 = - 2sqrt2 - 1

o191 : Qsqrt2

i192 : sub(o183, {x=>sqrt2/2, y=>-1/2-sqrt2[1@-sqrt2/2, y=>[1P

o192 = -3sqrt2

o192 : Qsqrt2

i193 : sub(o183, {x=>-sqrt2/2, y=>1/2-sqrt2[1P[1@[1P[1[1@-1/2+sqrt2})

o193 = - sqrt2 - 1

o193 : Qsqrt2

i194 : o183

               3         1
o194 = y + x - -*sqrt2 - -
               2         2

o194 : Rxy

i195 : y-(1/2+sqrt2)i195 : [1@(y-(1/2+sqrt2))/(x-sqrt2/2)

       4y - 4sqrt2 - 2
o195 = ---------------
         4x - 2sqrt2

o195 : frac(Rxy)

i196 : (y-(1/2+sqrt2))/(x-sqrt2/2)i196 : [1@o[1@1[1@9[1@5[1@ [1@*[1@ ([1@-y-(1/2+sqrt2))/(x-sqrt2/2)

             4        3       2           2
       - 256x  - 1024x  - 512x  + 256sqrt2  + 256sqrt2 - 192
o196 = -----------------------------------------------------
                       2                       2
                   256x  - 256sqrt2*x + 64sqrt2

o196 : frac(Rxy)

i197 : sub(o196, x => sqrt2/2)
stdio:197:1:(1):[0]: division by zero!

i198 : sub(o196, x => sqrt2/[1@([1@x[1@+sqrt2/2))

             4                      3              2                   2        
       - 128x  + (- 256sqrt2 - 512)x  + (- 192sqrt2  - 768sqrt2 - 256)x  + (- 64
o198 = -------------------------------------------------------------------------
                                                                                
                                                                                
       -------------------------------------------------------------------------
            3           2                      4          3          2
       sqrt2  - 384sqrt2  - 256sqrt2)x - 8sqrt2  - 64sqrt2  + 64sqrt2  + 128sqrt
       -------------------------------------------------------------------------
            2
        128x
       -------------------------------------------------------------------------
       2 - 96
       ------

o198 : frac(Rxy)

i199 : -8*sqrt2^4-64*sqrt2^3+64*sqrt2^2+128*sqrt2-96

o199 = 0

o199 : Qsqrt2

i200 : -64 * sqrt2^3 - 384*sqrt2^2=256*sqr[1P[1@-[1@[1[1P[1@ [1@-[1@ 256*sqrt2

o200 = - 384sqrt2 - 768

o200 : Qsqrt2

i201 : o195

       4y - 4sqrt2 - 2
o201 = ---------------
         4x - 2sqrt2

o201 : frac(Rxy)

i202 : o1[1@[1P[1@[1P[1@s[1@u[1@b[1@(o195, {x=>sqrt2/[1@-sqrt2/2, y=>1/2=sqr[1P[1@-sqrt2})
stdio:202:1:(1):[0]: expected y to be a generator of frac((Rx [y])/(y^2-x^4-4*x^3-2*x^2-1))

i203 : o195

       4y - 4sqrt2 - 2
o203 = ---------------
         4x - 2sqrt2

o203 : frac(Rxy)

i204 : o1sub(o195, {x=>-sqrt2/2, y=>1/2-sqrt2})i204 : o195-64 * sqrt2^3 - 384*sqrt2^2 - 256*sqrt2i204 : -8*sqrt2^4-64*sqrt2^3+64*sqrt2^2+128*sqrt2-96i204 : [18Psub(o196, x => (x+sqrt2/2[4Psqrt2/2)i204 : [12@o195 * (-y-(1/2+sqrt2))/(x-sqrt2/2)i204 : [8P(y-(1/2+sqrt2))/(x-sqrt2/2)i204 : o183(y-(1/2+sqrt2))/(x-sqrt2/2[1P[1[1P[1@-sqrt2))/(x+sqrt2/2)

       4y + 4sqrt2 - 2
o204 = ---------------
         4x + 2sqrt2

o204 : frac(Rxy)

i205 : o195*o204

                  4      3      2          2
       - 16y + 16x  + 64x  + 32x  - 16sqrt2  + 20
o205 = ------------------------------------------
                        2         2
                     16x  - 4sqrt2

o205 : frac(Rxy)

i206 : sub(o205,y=>-y)
stdio:206:1:(1):[0]: expected y to be a generator of frac((Rx [y])/(y^2-x^4-4*x^3-2*x^2-1))

i207 : o205*o184

              5         4         3         2                2                  
       (11264x  + 33792x  - 22528x  - 28160x  + (- 11264sqrt2  + 19712)x + 18304
o207 = -------------------------------------------------------------------------
                                                                                
                                                                                
       -------------------------------------------------------------------------
            2                  8         7          6         5                2
       sqrt2  - 14080)y + 5632x  + 45056x  + 118272x  + 95744x  + (- 18304sqrt2 
       -------------------------------------------------------------------------
                                                                  2            2
                                                             5632x  - 1408sqrt2
       -------------------------------------------------------------------------
                 4                2          3                2          2      
        - 14080)x  + (- 73216sqrt2  + 45056)x  + (- 42240sqrt2  + 46464)x  + (56
       -------------------------------------------------------------------------
       -------------------------------------------------------------------------
              2                       4             2
       32sqrt2  - 18304)x + 12672sqrt2  - 22880sqrt2  + 14432
       ------------------------------------------------------

o207 : frac(Rxy)

i208 : toString(o207)

o208 = ((11264*x^5+33792*x^4-22528*x^3-28160*x^2+(-11264*sqrt2^2+19712)*x+18304*
       sqrt2^2-14080)*y+5632*x^8+45056*x^7+118272*x^6+95744*x^5+(-18304*sqrt2^2-
       14080)*x^4+(-73216*sqrt2^2+45056)*x^3+(-42240*sqrt2^2+46464)*x^2+(5632*
       sqrt2^2-18304)*x+12672*sqrt2^4-22880*sqrt2^2+14432)/(5632*x^2-1408*sqrt2^
       2)

i209 : ((11264*x^5+33792*x^4-22528*x^3-28160*x^2+(-11264*sqrt2^2+19712)*x+18304*        sqrt2^2-14080)*y+5632*x^8+45056*x^7+118272*x^6+95744*x^5+(-18304*sqrt2^2-        14080)*x^4+(-73216*sqrt2^2+45056)*x^3+(-42240*sqrt2^2+46464)*x^2+(5632*
              sqrt2^2-18304)*x+12672*sqrt2^4-22880*sqrt2^2+14432)/(5632*x^2-1408 *sqrt2^       2)

           6       5       4       3      2                     7       6       
       (16x  + 128x  + 408x  + 544x  - 20x  - 208x - 174)y + 64x  + 488x  + 1152
o209 = -------------------------------------------------------------------------
                                                     16y + 32x + 8
       -------------------------------------------------------------------------
        5       4       2
       x  + 812x  - 274x  - 184x - 183
       -------------------------------

o209 : frac(Rxy)

i210 : o205

                  4      3      2          2
       - 16y + 16x  + 64x  + 32x  - 16sqrt2  + 20
o210 = ------------------------------------------
                        2         2
                     16x  - 4sqrt2

o210 : frac(Rxy)

i211 : toString(o205)

o211 = (-16*y+16*x^4+64*x^3+32*x^2-16*sqrt2^2+20)/(16*x^2-4*sqrt2^2)

i212 : (-16*y+16*x^4+64*x^3+32*x^2-16*sqrt2^2+20)/(16*x^2-4*sqrt2^2)

          2                  3      2
       (4x  + 16x + 10)y + 8x  + 30x  + 12x + 11
o212 = -----------------------------------------
                      4y + 8x + 2

o212 : frac(Rxy)

i213 : o209

           6       5       4       3      2                     7       6       
       (16x  + 128x  + 408x  + 544x  - 20x  - 208x - 174)y + 64x  + 488x  + 1152
o213 = -------------------------------------------------------------------------
                                                     16y + 32x + 8
       -------------------------------------------------------------------------
        5       4       2
       x  + 812x  - 274x  - 184x - 183
       -------------------------------

o213 : frac(Rxy)

i214 : Rxy

o214 = Rxy

o214 : QuotientRing

i215 : describe Rxy

                Rx [y]
o215 = -----------------------
        2    4     3     2
       y  - x  - 4x  - 2x  - 1

i216 : describe Rx

o216 = Qsqrt2 [x]

i217 : Fx = frac Rx

o217 = Fx

o217 : FractionField

i218 : Fxy = Fx[y]/(y^2-x^4-4*x^3-2*x^2-1)

o218 = Fxy

o218 : QuotientRing

i219 : describe Fxy

                Fx [y]
o219 = -----------------------
        2    4     3     2
       y  - x  - 4x  - 2x  - 1

i220 : describe Fxyi220 : Fxy = Fx[y]/(y^2-x^4-4*x^3-2*x^2-1)i220 : Fx = frac Rx[Ki220 : [1Pdescribe Rxyi220 : Rxy[o2(-16*y+16*x^4+64*x^3+32*x^2-16*sqrt2^2+20)/(16*x^2-4*sqrt2^2)

                      4       3      2
          -2       32x  + 128x  + 64x  - 24
o220 = -------*y + ------------------------
         2                    2
       2x  - 1             32x  - 16

o220 : frac(Fxy)

i221 : use Fxy

o221 = Fxy

o221 : QuotientRing

i222 : use Fx(-16*y+16*x^4+64*x^3+32*x^2-16*sqrt2^2+20)/(16*x^2-4*sqrt2^2)

                      4       3      2
          -2       32x  + 128x  + 64x  - 24
o222 = -------*y + ------------------------
         2                    2
       2x  - 1             32x  - 16

o222 : frac(Fxy)

i223 : lift(o222,Fxy)

                      4       3      2
          -2       32x  + 128x  + 64x  - 24
o223 = -------*y + ------------------------
         2                    2
       2x  - 1             32x  - 16

o223 : Fxy

i224 : toString(o223)

o224 = (-2)/(2*x^2-1)*y+(32*x^4+128*x^3+64*x^2-24)/(32*x^2-16)

i225 : (-2)/(2*x^2-1)*y+(32*x^4+128*x^3+64*x^2-24)/(32*x^2-16)

                      4       3      2
          -2       32x  + 128x  + 64x  - 24
o225 = -------*y + ------------------------
         2                    2
       2x  - 1             32x  - 16

o225 : Fxy

i226 : o205

                  4      3      2          2
       - 16y + 16x  + 64x  + 32x  - 16sqrt2  + 20
o226 = ------------------------------------------
                        2         2
                     16x  - 4sqrt2

o226 : frac(Rxy)

i227 : [15@(reverse-i-search)`':t': toString(o223[1@o': [17Pi227 : lift(o222,Fxy)i227 : [47@(-16*y+16*x^4+64*x^3+32*x^2-16*sqrt2^2+20)/(16*x^2-4*sqrt2^2)i227 : lift(o222,Fxy)[Ki227 : toString(o223)i227 : [41@(-2)/(2*x^2-1)*y+(32*x^4+128*x^3+64*x^2-24)/(32*x^2-16)i227 : toString(o223)[Ki227 : lift(o222,Fxy)i227 : [47@(-16*y+16*x^4+64*x^3+32*x^2-16*sqrt2^2+20)/(16*x^2-4*sqrt2^2)i227 : lift(o222,Fxy)[Ki227 : toString(o223)i227 : [41@(-2)/(2*x^2-1)*y+(32*x^4+128*x^3+64*x^2-24)/(32*x^2-16)i227 : o205[Ko205*o184

              5         4         3         2                2                  
       (11264x  + 33792x  - 22528x  - 28160x  + (- 11264sqrt2  + 19712)x + 18304
o227 = -------------------------------------------------------------------------
                                                                                
                                                                                
       -------------------------------------------------------------------------
            2                  8         7          6         5                2
       sqrt2  - 14080)y + 5632x  + 45056x  + 118272x  + 95744x  + (- 18304sqrt2 
       -------------------------------------------------------------------------
                                                                  2            2
                                                             5632x  - 1408sqrt2
       -------------------------------------------------------------------------
                 4                2          3                2          2      
        - 14080)x  + (- 73216sqrt2  + 45056)x  + (- 42240sqrt2  + 46464)x  + (56
       -------------------------------------------------------------------------
       -------------------------------------------------------------------------
              2                       4             2
       32sqrt2  - 18304)x + 12672sqrt2  - 22880sqrt2  + 14432
       ------------------------------------------------------

o227 : frac(Rxy)

i228 : o205*o184i228 : [1@s[1@t[1@r[1@[1[1[1[1P[1@to[1@[1@S[1@t[1@r[1@i[1@n[1@g[1@(o205*o184)

o228 = ((11264*x^5+33792*x^4-22528*x^3-28160*x^2+(-11264*sqrt2^2+19712)*x+18304*
       sqrt2^2-14080)*y+5632*x^8+45056*x^7+118272*x^6+95744*x^5+(-18304*sqrt2^2-
       14080)*x^4+(-73216*sqrt2^2+45056)*x^3+(-42240*sqrt2^2+46464)*x^2+(5632*
       sqrt2^2-18304)*x+12672*sqrt2^4-22880*sqrt2^2+14432)/(5632*x^2-1408*sqrt2^
       2)

i229 : ((11264*x^5+33792*x^4-22528*x^3-28160*x^2+(-11264*sqrt2^2+19712)*x+18304*        sqrt2^2-14080)*y+5632*x^8+45056*x^7+118272*x^6+95744*x^5+(-18304*sqrt2^2-        14080)*x^4+(-73216*sqrt2^2+45056)*x^3+(-42240*sqrt2^2+46464)*x^2+(5632*
              sqrt2^2-18304)*x+12672*sqrt2^4-22880*sqrt2^2+14432)/(5632*x^2-1408 *sqrt2^       2)

         5      4      3      2              
       8x  + 24x  - 16x  - 20x  - 2x + 16    
o229 = ----------------------------------*y +
                       2                     
                     4x  - 2                 
       -------------------------------------------------------------------------
           8        7         6         5        4         3        2
       800x  + 6400x  + 16800x  + 13600x  - 7200x  - 14400x  - 5400x  - 1000x + 
       -------------------------------------------------------------------------
                                            2
                                        800x  - 400
       -------------------------------------------------------------------------
       2750
       ----

o229 : frac(Fxy)

i230 : lift(o229,Fxy)

         5      4      3      2              
       8x  + 24x  - 16x  - 20x  - 2x + 16    
o230 = ----------------------------------*y +
                       2                     
                     4x  - 2                 
       -------------------------------------------------------------------------
           8        7         6         5        4         3        2
       800x  + 6400x  + 16800x  + 13600x  - 7200x  - 14400x  - 5400x  - 1000x + 
       -------------------------------------------------------------------------
                                            2
                                        800x  - 400
       -------------------------------------------------------------------------
       2750
       ----

o230 : Fxy

i231 : toString(o230)

o231 = (8*x^5+24*x^4-16*x^3-20*x^2-2*x+16)/(4*x^2-2)*y+(800*x^8+6400*x^7+16800*x
       ^6+13600*x^5-7200*x^4-14400*x^3-5400*x^2-1000*x+2750)/(800*x^2-400)

i232 : (800*x^8+6400*x^7+16800*x       ^6+13600*x^5-7200*x^4-14400*x^3-5400*x^2- 1000*x+2750)/(800*x^2-400)

           8        7         6         5        4         3        2
       800x  + 6400x  + 16800x  + 13600x  - 7200x  - 14400x  - 5400x  - 1000x + 
o232 = -------------------------------------------------------------------------
                                            2
                                        800x  - 400
       -------------------------------------------------------------------------
       2750
       ----

o232 : Fx

i233 : (800*x^8+6400*x^7+16800*x       ^6+13600*x^5-7200*x^4-14400*x^3-5400*x^2- 1000*x+2750)

           8        7         6         5        4         3        2
o233 = 800x  + 6400x  + 16800x  + 13600x  - 7200x  - 14400x  - 5400x  - 1000x +
       -------------------------------------------------------------------------
       2750

o233 : Fx

i234 : (800*x^8+6400*x^7+16800*x       ^6+13600*x^5-7200*x^4-14400*x^3-5400*x^2-11000*x+2750)/50

          8       7       6       5       4       3       2
o234 = 16x  + 128x  + 336x  + 272x  - 144x  - 288x  - 108x  - 20x + 55

o234 : Fx

i235 : (800*x^2-400)/50

          2
o235 = 16x  - 8

o235 : Fx

i236 : 16*16[Ko235*(x^2-1/2)

          4      2
o236 = 16x  - 16x  + 4

o236 : Fx

i237 : o234

          8       7       6       5       4       3       2
o237 = 16x  + 128x  + 336x  + 272x  - 144x  - 288x  - 108x  - 20x + 55

o237 : Fx

i238 : o234%o236

o238 = 0

o238 : Fx

i239 : o234

          8       7       6       5       4       3       2
o239 = 16x  + 128x  + 336x  + 272x  - 144x  - 288x  - 108x  - 20x + 55

o239 : Fx

i240 : o236

          4      2
o240 = 16x  - 16x  + 4

o240 : Fx

i241 : o234%o23[1P[1@/

               8            7            6            5            4            
       1767200x  + 14137600x  + 37111200x  + 30042400x  - 15904800x  - 31809600x
o241 = -------------------------------------------------------------------------
                                                      4           2
                                              1767200x  - 1767200x  + 441800
       -------------------------------------------------------------------------
       3            2
         - 11928600x  - 2209000x + 6074750
       -----------------------------------

o241 : Fx

i242 : o234/o2[1@/

               8            7            6            5            4            
       1767200x  + 14137600x  + 37111200x  + 30042400x  - 15904800x  - 31809600x
o242 = -------------------------------------------------------------------------
                                                      4           2
                                              1767200x  - 1767200x  + 441800
       -------------------------------------------------------------------------
       3            2
         - 11928600x  - 2209000x + 6074750
       -----------------------------------

o242 : Fx

i243 : o234//o23[1[1P[1@%

o243 = 0

o243 : Fx

i244 : o234

          8       7       6       5       4       3       2
o244 = 16x  + 128x  + 336x  + 272x  - 144x  - 288x  - 108x  - 20x + 55

o244 : Fx

i245 : o2[1@l[1@i[1@f[1@t[1@(o234,Rx)

          8       7       6       5       4       3       2
o245 = 16x  + 128x  + 336x  + 272x  - 144x  - 288x  - 108x  - 20x + 55

o245 : Rx

i246 : o2[1@l[1@i[1@f[1@t[1@(o236,Rx)

          4      2
o246 = 16x  - 16x  + 4

o246 : Rx

i247 : o245%o246

          3     2
o247 = 80x  + 8x  - 120x + 4

o247 : Rx

i248 : o229

         5      4      3      2              
       8x  + 24x  - 16x  - 20x  - 2x + 16    
o248 = ----------------------------------*y +
                       2                     
                     4x  - 2                 
       -------------------------------------------------------------------------
           8        7         6         5        4         3        2
       800x  + 6400x  + 16800x  + 13600x  - 7200x  - 14400x  - 5400x  - 1000x + 
       -------------------------------------------------------------------------
                                            2
                                        800x  - 400
       -------------------------------------------------------------------------
       2750
       ----

o248 : frac(Fxy)

i249 : o2[1@to[1@[1@S[1@t[1@r[1@i[1@n[1@g[1@(o229)

o249 = (8*x^5+24*x^4-16*x^3-20*x^2-2*x+16)/(4*x^2-2)*y+(800*x^8+6400*x^7+16800*x
       ^6+13600*x^5-7200*x^4-14400*x^3-5400*x^2-1000*x+2750)/(800*x^2-400)

i250 : (8*x^5+24*x^4-16*x^3-20*x^2-2*x+16)

         5      4      3      2
o250 = 8x  + 24x  - 16x  - 20x  - 2x + 16

o250 : Fx

i251 : (8*x^5+24*x^4-16*x^3-20*x^2-2*x+16)*4

          5      4      3      2
o251 = 32x  + 96x  - 64x  - 80x  - 8x + 64

o251 : Fx

i252 : (8*x^5+24*x^4-16*x^3-20*x^2-2*x+16)*4i252 : [1@l[1@i[1@f[1@t([1@(8*x^5+24*x^4-16*x^3-20*x^2-2*x+16)*4,Rx)

          5      4      3      2
o252 = 32x  + 96x  - 64x  - 80x  - 8x + 64

o252 : Rx

i253 : o252%o246

            3      2
o253 = - 32x  + 16x  - 16x + 40

o253 : Rx

i254 : o252%o246i254 : [1@-[1@ 

          3      2
o254 = 32x  - 16x  + 16x - 40

o254 : Rx

i255 : - o252%o246i255 : [1P[1P[1@(o252%o246)*y

             3      2
o255 = (- 32x  + 16x  - 16x + 40)y

o255 : Fxy

i256 : (o252%o246)*yi256 : [1@o[1@2[1@4[1@7[1@ [1@+[1@ 

             3      2                   3     2
o256 = (- 32x  + 16x  - 16x + 40)y + 80x  + 8x  - 120x + 4

o256 : Fxy

i257 : o247 + (o252%o246)*-

           3      2                   3     2
o257 = (32x  - 16x  + 16x - 40)y + 80x  + 8x  - 120x + 4

o257 : Fxy

i258 : o256*o257

              10        9       8         6        5         4        3        2
o258 = - 1024x   - 3072x  + 768x  + 13568x  + 3584x  - 19968x  - 2048x  + 9728x 
       -------------------------------------------------------------------------
       + 320x - 1584

o258 : Fxy

i259 : o256*o257i259 : [1@(o256*o257)//(2*x^2-1)

             8        7       6       5        4        3        2
o259 = - 512x  - 1536x  + 128x  - 768x  + 6848x  + 1408x  - 6560x  - 320x + 1584

o259 : Fxy

i260 : (o256*o257)//(2*x^2-1/[1[1P[1@%

o260 = 0

o260 : Fxy

i261 : (o256*o257)%(2*x^2-[1@//(2*x^2-1)

             8        7       6       5        4        3        2
o261 = - 512x  - 1536x  + 128x  - 768x  + 6848x  + 1408x  - 6560x  - 320x + 1584

o261 : Fxy

i262 : o2(o256*o257)//(2*x^2-1[1P%(2*x^2-1)i262 : [1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1@o[1@2[1@6[1@1

o262 = 0

o262 : Fxy

i263 : o261%(2*x^2-1)i263 : o261[1P[1@/[1@/

             6       5      4       3        2
o263 = - 256x  - 768x  - 64x  - 768x  + 3392x  + 320x - 1584

o263 : Fxy

i264 : o261//(2*x^2-1[1P%(2*x^2-1)i264 : [8@(o256*o257)//(2*x^2-1)i264 : [8Po261%(2*x^2-1)i264 : o26[1P[1@3

o264 = 0

o264 : Fxy

i265 : o263%(2*x^2-1)i265 : o263[1P[1@/[1@/

              6        5       4        3         2
       - 2048x  - 6144x  - 512x  - 6144x  + 27136x  + 2560x - 12672
o265 = ------------------------------------------------------------
                                    2
                                 16x  - 8

o265 : Fxy

i266 : o263

             6       5      4       3        2
o266 = - 256x  - 768x  - 64x  - 768x  + 3392x  + 320x - 1584

o266 : Fxy

i267 : o2[1@l[1@i[1@f[1@t[1@(o263,Rx)

             6       5      4       3        2
o267 = - 256x  - 768x  - 64x  - 768x  + 3392x  + 320x - 1584

o267 : Rx

i268 : lift(o263,Rx)i268 : o263[K//(2*x^2-1)i268 : o263[1P%(2*x^2-1)i268 : o26[1P[1@7

o268 = 0

o268 : Fx

i269 : o267%(2*x^2-1)i269 : o267[1P[1@/[1@/

              6        5       4        3         2
       - 2048x  - 6144x  - 512x  - 6144x  + 27136x  + 2560x - 12672
o269 = ------------------------------------------------------------
                                    2
                                 16x  - 8

o269 : Fx

i270 : x

o270 = x

o270 : Fx

i271 : use Rx

o271 = Rx

o271 : PolynomialRing

i272 : use x[o267//(2*x^2-1)

             4       3      2
o272 = - 128x  - 384x  - 96x  - 576x + 1648

o272 : Rx

i273 : o267//(2*x^2-1)i273 : o267/[1[1P[1@%

o273 = - 256x + 64

o273 : Rx

i274 : o267

             6       5      4       3        2
o274 = - 256x  - 768x  - 64x  - 768x  + 3392x  + 320x - 1584

o274 : Rx

i275 : o2[1@s[1@u[1@b[1@(o267, x=>sqrt2/2)

o275 = - 128sqrt2 + 64

o275 : Qsqrt2

i276 : sub(o267, x=>sqrt2/[1@-

o276 = 128sqrt2 + 64

o276 : Qsqrt2

i277 : [15@(reverse-i-search)`':s': sub(o267, x=>-sqrt2/2[1@u':[1@b': sub(o267, x=>[1sub(o2[6P05,y=>[18Pi277 : 
stdio:279:1:(1):[0]: expected y to be a generator of frac((Rx [y])/(y^2-x^4-4*x^3-2*x^2-1))

i278 : o205

                  4      3      2          2
       - 16y + 16x  + 64x  + 32x  - 16sqrt2  + 20
o278 = ------------------------------------------
                        2         2
                     16x  - 4sqrt2

o278 : frac(Rxy)

i279 : Qsqrt2

o279 = Qsqrt2

o279 : QuotientRing

i280 : Qsqr[1@d[1@e[1@s[1@c[1@[1P[1@r[1@i[1@b[1@e[1@ 

       QQ [sqrt2]
o280 = ----------
            2
       sqrt2  - 2

i281 : RuRx

o281 = Rx

o281 : PolynomialRing

i282 : describe Rx

o282 = Qsqrt2 [x]

i283 : Rxv = Rx[v]

o283 = Rxv

o283 : PolynomialRing

i284 : Fxv = frac Rxv

o284 = Fxv

o284 : FractionField

i285 : Fxv = frac Rxvi285 : [3PRxv = Rx[v]i285 : describe Rxi285 : Rxdescribe Qsqrt2i285 : [9PQsqr[2Po2sub(o205,y=>-y)i285 : o205[K

                  4      3      2          2
       - 16y + 16x  + 64x  + 32x  - 16sqrt2  + 20
o285 = ------------------------------------------
                        2         2
                     16x  - 4sqrt2

o285 : frac(Rxy)

i286 : o2[1@s[1@u[1@b[1@(o205, y => v)
stdio:288:1:(1):[0]: expected y to be a generator of frac((Rx [y])/(y^2-x^4-4*x^3-2*x^2-1))

i287 : [15@(reverse-i-search)`':u': sub(o205, y => [10Ps': use R[1@e': [18Pi287 : 

o287 = Rx

o287 : PolynomialRing

i288 : o256

             3      2                   3     2
o288 = (- 32x  + 16x  - 16x + 40)y + 80x  + 8x  - 120x + 4

o288 : Fxy

i289 : o256*y

           3     2                   7       6      5     4      3      2
o289 = (80x  + 8x  - 120x + 4)y - 32x  - 112x  - 16x  + 8x  + 96x  + 96x  - 16x
       -------------------------------------------------------------------------
       + 40

o289 : Fxy

i290 : o256[1@(o256*y)%o246

o290 = 0

o290 : Fxy

i291 : (o256*y)%o

           3     2                   7       6      5     4      3      2
o291 = (80x  + 8x  - 120x + 4)y - 32x  - 112x  - 16x  + 8x  + 96x  + 96x  - 16x
       -------------------------------------------------------------------------
       + 40

o291 : Fxy

i292 : (o256*[1@l[1@i[1@f[1@t(o256*y, Rxy)
stdio:294:1:(1):[0]: no method found for applying lift to:
     argument 1 :      3     2                   7       6     . (of class Fxy)
                   (80x  + 8x  - 120x + 4)y - 32x  - 112x  - 16.
     argument 2 :  Rxy

i293 : describe Rxy

                Rx [y]
o293 = -----------------------
        2    4     3     2
       y  - x  - 4x  - 2x  - 1

i294 : o256

             3      2                   3     2
o294 = (- 32x  + 16x  - 16x + 40)y + 80x  + 8x  - 120x + 4

o294 : Fxy

i295 : o256*y

           3     2                   7       6      5     4      3      2
o295 = (80x  + 8x  - 120x + 4)y - 32x  - 112x  - 16x  + 8x  + 96x  + 96x  - 16x
       -------------------------------------------------------------------------
       + 40

o295 : Fxy

i296 : o256

             3      2                   3     2
o296 = (- 32x  + 16x  - 16x + 40)y + 80x  + 8x  - 120x + 4

o296 : Fxy

i297 : o2[1@l[1@i[1@f[1@t[1@(o256,Rxy)
stdio:299:1:(1):[0]: no method found for applying lift to:
     argument 1 :        3      2                   3     2    . (of class Fxy)
                   (- 32x  + 16x  - 16x + 40)y + 80x  + 8x  - 1.
     argument 2 :  Rxy

i298 : toString(o296)

o298 = (-32*x^3+16*x^2-16*x+40)*y+80*x^3+8*x^2-120*x+4

i299 : (-32*x^3+16*x^2-16*x+40)*y+80*x^3+8*x^2-120*x+4

             3      2                   3     2
o299 = (- 32x  + 16x  - 16x + 40)y + 80x  + 8x  - 120x + 4

o299 : Fxy

i300 : use Rxy

o300 = Rxy

o300 : QuotientRing

i301 : use Rx(-32*x^3+16*x^2-16*x+40)*y+80*x^3+8*x^2-120*x+4

             3      2                   3     2
o301 = (- 32x  + 16x  - 16x + 40)y + 80x  + 8x  - 120x + 4

o301 : Rxy

i302 : o301*y

           3     2                   7       6      5     4      3      2
o302 = (80x  + 8x  - 120x + 4)y - 32x  - 112x  - 16x  + 8x  + 96x  + 96x  - 16x
       -------------------------------------------------------------------------
       + 40

o302 : Rxy

i303 : o246

          4      2
o303 = 16x  - 16x  + 4

o303 : Rx

i304 : o24301*y % o246

           3     2                   3      2
o304 = (80x  + 8x  - 120x + 4)y + 56x  + 20x  - 4x + 66

o304 : Rxy

i305 : basis Rxy

o305 = | 1 y |

                 1         2
o305 : Matrix Rxy  <--- Rxy

i306 : target o305

          1
o306 = Rxy

o306 : Rxy-module, free

i307 : o305 o304
stdio:309:1:(1):[0]: no method for adjacent objects:
--            | 1 y | (of class Matrix)
--                3     2                   3      2
--    SPACE   (80x  + 8x  - 120x + 4)y + 56x  + 20x  - 4x + 66 (of class Rxy)

i308 : o305 o304i308 : o305[1@([1Po304)
stdio:310:1:(1):[0]: no method for adjacent objects:
--            | 1 y | (of class Matrix)
--                3     2                   3      2
--    SPACE   (80x  + 8x  - 120x + 4)y + 56x  + 20x  - 4x + 66 (of class Rxy)

i309 : o305

o309 = | 1 y |

                 1         2
o309 : Matrix Rxy  <--- Rxy

i310 : targo305

o310 = | 1 y |

                 1         2
o310 : Matrix Rxy  <--- Rxy

i311 : o3[1@so[1@[1@u[1@r[1@c[1@e[1@ 

          2
o311 = Rxy

o311 : Rxy-module, free, degrees {0, 1}

i312 : source o305i312 : [1P[1P[1P[1P[1P[1P[1@t[1@a[1@r[1@g[1@e[1@t

          1
o312 = Rxy

o312 : Rxy-module, free

i313 : o304

           3     2                   3      2
o313 = (80x  + 8x  - 120x + 4)y + 56x  + 20x  - 4x + 66

o313 : Rxy

i314 : coeffs o304
stdio:316:1:(1):[0]: no method for adjacent objects:
--            coeffs (of class Symbol)
--                3     2                   3      2
--    SPACE   (80x  + 8x  - 120x + 4)y + 56x  + 20x  - 4x + 66 (of class Rxy)

i315 : coeffs o304i315 : [1P[1P[1Pf[1[1P[1P[1@c[1@o[1@e[1@f[1@f[1@i[1@c[1@i[1@e[1@n[1@t[1@s[1P[1@(o304)

o315 = (| y 1 |, {1} | 80x3+8x2-120x+4 |)
                 {0} | 56x3+20x2-4x+66 |

o315 : Sequence

i316 : coefficients(o304) % 2
stdio:318:20:(1):[0]: no method for binary operator % applied to objects:
--            (| y 1 |, {1} | 80x3+8x2-120x+4 |) (of class Sequence)
--                      {0} | 56x3+20x2-4x+66 |
--      %     2 (of class ZZ)

i317 : coefficients(o304) # 2
stdio:319:20:(1):[0]: array index 2 out of bounds 0 .. 0

i318 : coefficients(o304) # 1
stdio:320:20:(1):[0]: array index 1 out of bounds 0 .. 0

i319 : coefficients(o304) #

o319 = (| y 1 |, {1} | 80x3+8x2-120x+4 |)
                 {0} | 56x3+20x2-4x+66 |

o319 : Sequence

i320 : coefficients(o304)

o320 = (| y 1 |, {1} | 80x3+8x2-120x+4 |)
                 {0} | 56x3+20x2-4x+66 |

o320 : Sequence

i321 : coefficients(o304)i321 : [1@#[1@ 

o321 = 2

i322 : # coefficients(o304)i322 : [1P[1Pcoefficients(o304) # 1
stdio:324:20:(1):[0]: array index 1 out of bounds 0 .. 0

i323 : o320

o323 = (| y 1 |, {1} | 80x3+8x2-120x+4 |)
                 {0} | 56x3+20x2-4x+66 |

o323 : Sequence

i324 : o320#2
stdio:326:5:(1):[0]: array index 2 out of bounds 0 .. 1

i325 : o320#1

o325 = {1} | 80x3+8x2-120x+4 |
       {0} | 56x3+20x2-4x+66 |

                 2         1
o325 : Matrix Rxy  <--- Rxy

i326 : o325

o326 = {1} | 80x3+8x2-120x+4 |
       {0} | 56x3+20x2-4x+66 |

                 2         1
o326 : Matrix Rxy  <--- Rxy

i327 : entries o236
stdio:329:1:(1):[0]: no method found for applying entries to:
                      4      2
     argument   :  16x  - 16x  + 4 (of class Fx)

i328 : entries o23[K326

            3     2                  3      2
o328 = {{80x  + 8x  - 120x + 4}, {56x  + 20x  - 4x + 66}}

o328 : List

i329 : entries o32236i329 : [8Po320coefficients(o304) # 1i329 : [1@(coefficients(o304)[1@)

o329 = {1} | 80x3+8x2-120x+4 |
       {0} | 56x3+20x2-4x+66 |

                 2         1
o329 : Matrix Rxy  <--- Rxy

i330 : (coefficients(o304)) # 1i330 : [1@e[1@n[1@t[1@r[1@i[1@e[1@s([1@(coefficients(o304)) # 1)

            3     2                  3      2
o330 = {{80x  + 8x  - 120x + 4}, {56x  + 20x  - 4x + 66}}

o330 : List

i331 : o304

           3     2                   3      2
o331 = (80x  + 8x  - 120x + 4)y + 56x  + 20x  - 4x + 66

o331 : Rxy

i332 : o3entries((coefficients(o304)) # [1P[1@1

              3      2                  3     2
o332 = {{- 32x  + 16x  - 16x + 40}, {80x  + 8x  - 120x + 4}}

o332 : List

i333 : entries((coefficients(o301)) # [1P[1P[1P[1@2[1@4[1@6

o333 = {{16}, {-16}, {4}}

o333 : List

i334 : entries((coefficients(o246)) # 1[1@l[1@i[1@f[1@t[1@(o246[1@,[1@R[1@x[1@y))[1)) # 1)
stdio:336:23:(1):[0]: no method found for applying lift to:
                      4      2
     argument 1 :  16x  - 16x  + 4 (of class Rx)
     argument 2 :  Rxy

i335 : o246

          4      2
o335 = 16x  - 16x  + 4

o335 : Rx

i336 : liftlift(o246,Rxy)
stdio:338:1:(1):[0]: no method found for applying lift to:
                      4      2
     argument 1 :  16x  - 16x  + 4 (of class Rx)
     argument 2 :  Rxy

i337 : use Rxy

o337 = Rxy

o337 : QuotientRing

i338 : toString o24[1P[1@(o246i338 : [Khelp(use)

o338 = use -- install or activate object
       *********************************



       Ways to use use :
       =================

         * "use(Package)" -- activate a previously dismissed package
         * use(Monoid), see "use(Ring)" -- install ring variables and ring
           operations
         * "use(Ring)" -- install ring variables and ring operations

o338 : DIV

i339 : help(use)i339 : [2Puse Rxlift(o246,Rxy)i339 : [1@t[1@o[1@[1P[1@S[1@t[1@r[1@i[1@n[1@g[1P[1P[1P[1P(o246[K)

o339 = 16*x^4-16*x^2+4

i340 : 16*x^4-16*x^2+4

          4      2
o340 = 16x  - 16x  + 4

o340 : Rx

i341 : [15@(reverse-i-search)`':u': help(us[1@s': hel[1@e': help[2Puse Rx[18Pi341 : 

o341 = Rxy

o341 : QuotientRing

i342 : use Rx16*x^4-16*x^2+4

          4      2
o342 = 16x  - 16x  + 4

o342 : Rx

i343 : 16*x^4-16*x^2+4i343 : [1@l[1@i[1@f[1@t[1@(16*x^4-16*x^2+4,Rxy)
stdio:345:1:(1):[0]: no method found for applying lift to:
                      4      2
     argument 1 :  16x  - 16x  + 4 (of class Rx)
     argument 2 :  Rxy

i344 : lift(16*x^4-16*x^2+4,Rxy)i344 : [10P16*x^4-16*x^2+4i344 : [8Puse Rx16*x^4-16*x^2+4

          4      2
o344 = 16x  - 16x  + 4

o344 : Rx

i345 : sub(o344,Rxy)

          4      2
o345 = 16x  - 16x  + 4

o345 : Rxy

i346 : sub(o344,Rxy)i346 : 16*x^4-16*x^2+4i346 : lift(16*x^4-16*x^2+4,Rxy)i346 : [10P16*x^4-16*x^2+4i346 : [8Puse Rx16*x^4-16*x^2+4i346 : [1PtoString(o246)i346 : [5Phelp(use)i346 : [2Puse Rxlift(o246,Rxy)i346 : o246entries((coefficients(lift(o246,Rxy))) # 1[10Po246)) # 1[10@lift(o246,Rxy))) # 1[10Po246)) # [1P[1P[1P[1@3[1@4[1@5)) # 1)

            4      2
o346 = {{16x  - 16x  + 4}}

o346 : List

i347 : [15@(reverse-i-search)`':e': entries((coefficients(o345)) # [1@n': entries((coeffi[1@t': entries((coefficentries((coefficients([10@lift(o246,Rxentries((coefficients([10Po2entries((coefficients(o30[18Pi347 : entries((coeffici

              3      2                  3     2
o347 = {{- 32x  + 16x  - 16x + 40}, {80x  + 8x  - 120x + 4}}

o347 : List

i348 : entries((coefficients(o301)) # 145)) # 1[1@*[1@y

            4      2
o348 = {{16x  - 16x  + 4}}

o348 : List

i349 : entries((coefficients(o345*y)) # 1)i349 : [1P[1P[1P[1P[1P[1P[1P([1[1Pcoefficients(o345*y)) # [K

o349 = (| y |, {1} | 16x4-16x2+4 |)

o349 : Sequence

i350 : coefficients(o345*y,{y})
stdio:352:1:(1):[0]: no method found for applying coefficients to:
                       4      2
     argument 1 :  (16x  - 16x  + 4)y (of class Rxy)
     argument 2 :  {y} (of class List)

i351 : coefficients(o345*y,{y[1P[1Py)
stdio:353:1:(1):[0]: no method found for applying coefficients to:
                       4      2
     argument 1 :  (16x  - 16x  + 4)y (of class Rxy)
     argument 2 :  y (of class Rxy)

i352 : coefficients(o345*y,[1@V[1@a[1@r[1@i[1@a[1@b[1@l[1@e[1@s[1@=[1@>y)

o352 = (| y |, {1} | 16x4-16x2+4 |)

o352 : Sequence

i353 : coefficients(o345*y,Variables=>[1@{y}

o353 = (| y |, {1} | 16x4-16x2+4 |)

o353 : Sequence

i354 : coefficients(o345*y,Variables=>{y}[1@1[1@,
stdio:356:1:(1):[0]: expected a list or sequence of integers or variables in the same ring

i355 : coefficients(o345*y,Variables=>{1,y}[1P[1[1P[1P

o355 = (| 1 |, | 16x4-16x2+4 |)

o355 : Sequence

i356 : coefficients(o345,Variables=>{y[1@*[1@y

o356 = (| y |, {1} | 16x4-16x2+4 |)

o356 : Sequence

i357 : coefficients(o345*y,Variables=>{y[2P,Variables=>{y[4@*y,Variables=>{1,y}[2Py[2Pyy)[2@{y})[Ki357 : [15@entries((coefficients(o345*y)) # 1[2P01)) # 145)) # 1)

            4      2
o357 = {{16x  - 16x  + 4}}

o357 : List

i358 : [15@(reverse-i-search)`':3': entries((coefficients(o345)) # (reverse-i-search)`3[1@0': entries((coefficients(o30(reverse-i-search)`304': o304entries((coefficients(o304)) # [18Pi358 : entries((coefficients(o

            3     2                  3      2
o358 = {{80x  + 8x  - 120x + 4}, {56x  + 20x  - 4x + 66}}

o358 : List

i359 : [15@(reverse-i-search)`':3': entries((coefficients(o304)) # (reverse-i-search)`3[1@0': entries((coefficients(o(reverse-i-search)`30[1@1': entries((coefficients(o30[18Pi359 : entries((coefficients(o301)) # 1)

              3      2                  3     2
o359 = {{- 32x  + 16x  - 16x + 40}, {80x  + 8x  - 120x + 4}}

o359 : List

i360 : {o358, o359}

             3     2                  3      2                     3      2  
o360 = {{{80x  + 8x  - 120x + 4}, {56x  + 20x  - 4x + 66}}, {{- 32x  + 16x  -
       -------------------------------------------------------------------------
                      3     2
       16x + 40}, {80x  + 8x  - 120x + 4}}}

o360 : List

i361 : {o358, o359}i361 : [1@m[1@a[1@t[1@r[1@i[1@x[1@ 
stdio:363:1:(1):[0]: no method found for applying ring to:
                       3     2
     argument   :  {80x  + 8x  - 120x + 4} (of class List)

i362 : matrix {o358, o359}i362 : matrix[1P[1P[1@(o358, o359)
stdio:364:1:(1):[0]: no method found for applying matrix to:
     argument 1 :       3     2                  3      2     . (of class List)
                   {{80x  + 8x  - 120x + 4}, {56x  + 20x  - 4x.
     argument 2 :         3      2                  3     2   . (of class List)
                   {{- 32x  + 16x  - 16x + 40}, {80x  + 8x  - .

i363 : o358

            3     2                  3      2
o363 = {{80x  + 8x  - 120x + 4}, {56x  + 20x  - 4x + 66}}

o363 : List

i364 : matrix(o358)

o364 = | 80x3+8x2-120x+4 |
       | 56x3+20x2-4x+66 |

                 2         1
o364 : Matrix Rxy  <--- Rxy

i365 : matrix(o359)

o365 = | -32x3+16x2-16x+40 |
       | 80x3+8x2-120x+4   |

                 2         1
o365 : Matrix Rxy  <--- Rxy

i366 : matrix(o359) | matrix(o358)

o366 = | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 2         2
o366 : Matrix Rxy  <--- Rxy

i367 : matrix(o359) | matrix(o358) | matrix(o358)

o367 = | -32x3+16x2-16x+40 80x3+8x2-120x+4 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 56x3+20x2-4x+66 |

                 2         3
o367 : Matrix Rxy  <--- Rxy

i368 : matrix(o359) | matrix(o358) | matrix(o358)i368 : [Kmatrix(o359)

o368 = | -32x3+16x2-16x+40 |
       | 80x3+8x2-120x+4   |

                 2         1
o368 : Matrix Rxy  <--- Rxy

i369 : matrix(o359)i369 : [1@t[1@r[1@a[1@n[1@s[1@p[1@o[1@s[1@e[1@(matrix(o359))

o369 = | -32x3+16x2-16x+40 80x3+8x2-120x+4 |

                 1         2
o369 : Matrix Rxy  <--- Rxy

i370 : transpose(matrix(o359))i370 : t[1@[1@r[1@a[1@n[1@s[1@p[1@o[1@s[1@e[1@([1@m[1@at[1@[1@r[1@i[1@x[1@([1@o[1@3[1@5[1@8[1@)[1@[1P[1@)[1@ [1@|[1@|[1@ 

o370 = | 80x3+8x2-120x+4   56x3+20x2-4x+66 |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |

                 2         2
o370 : Matrix Rxy  <--- Rxy

i371 : matrix({o246,0})
stdio:373:1:(1):[0]: expected a table of ring elements or matrices, or a list of elements of the same module

i372 : o246

          4      2
o372 = 16x  - 16x  + 4

o372 : Rx

i373 : o2matrix({o246,0[1P{[1@{o246,0}}

o373 = | 16x4-16x2+4 0 |

                1        2
o373 : Matrix Rx  <--- Rx

i374 : matrix{{o246,0}}i374 : o246matrix({o246,0})i374 : [34@transpose(matrix(o358)) || transpose(matrix(o359))i374 : [1@m[1@at[1@[1@r[1@i[1@x[1@{[1@{[1@o[1@2[1@4[1@6[1@,[1@0[1@}[1@}[1@ [1@|[1@|[1@ 
stdio:376:18:(1):[0]: expected matrices over the same ring

i375 : sub(o246,Rxy)

          4      2
o375 = 16x  - 16x  + 4

o375 : Rxy

i376 : sub(o246,Rxy)i376 : [57@matrix{{o246,0}} || transpose(matrix(o358)) || transpose(matrix(o359))i376 : matrix{{o[1P[1P[1P[1@3[1@7[1@5

o376 = | 16x4-16x2+4       0               |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |

                 3         2
o376 : Matrix Rxy  <--- Rxy

i377 : matrix{{o375,0}} || transpose(matrix(o358)) || transpose(matrix(o359))i377 : matrix{{o375,0}[1@,[1@{0} || transpose(matrix(o358)) || transpose(matrix(o359)) [A377 : matrix{{o375,0},{0,} || transpose(matrix(o358)) || transpose(matrix(o359
)[A377 : matrix{{o375,0},{0,o} || transpose(matrix(o358)) || transpose(matrix(o359))[A77 : matrix{{o375,0},{0,o3} || transpose(matrix(o358)) || transpose(matrix(o359))[A7 : matrix{{o375,0},{0,o37} || transpose(matrix(o358)) || transpose(matrix(o35[1@9[A77 : matrix{{o375,0},{0,o375} || transpose(matrix(o358)) || transpose(matrix(o3[1@5[A77 : matrix{{o375,0},{0,o375}} || transpose(matrix(o358)) || transpose(matrix(o[1@3[A77 : matrix{{o375,0},{0,o375}
o359))

o377 = | 16x4-16x2+4       0               |
       | 0                 16x4-16x2+4     |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |

                 4         2
o377 : Matrix Rxy  <--- Rxy

i378 : matrix{{o375,0},{0,o375}} || transpose(matrix(o358)) || transpose(matrix(oo359))[A matrix{{0o375,0},{0,o375}} || transpose(matrix(o358)) || transpose(matrix([1@o[A78 : matrix{{0,o375,0},{0,o375}} || transpose(matrix(o358)) || transpose(matrix[1@([A78 : matrix{{0,o3750},{0,o375}} || transpose(matrix(o358)) || transpose(matrix([1P[A378 : matrix{{0,o375},{0,o375}} || transpose(matrix(o358)) || transpose(matrix(o[1P[A378 : matrix{{0,o375},{,o375}} || transpose(matrix(o358)) || transpose(matrix(o3[1P[A378 : matrix{{0,o375},{o375}} || transpose(matrix(o358)) || transpose(matrix(o35[1P[A378 : matrix{{0,o375},{o375,}} || transpose(matrix(o358)) || transpose(matrix(o3[1@5[A78 : matrix{{0,o375},{o375,0}} || transpose(matrix(o358)) || transpose(matrix(o[1@3[A78 : matrix{{0,o375},{o375,0}} || transpose(matrix(o35)) || transpose(matrix(o3[1P[A378 : matrix{{0,o375},{o375,0}} || transpose(matrix(o359)) || transpose(matrix(o[1@3[A78 : matrix{{0,o375},{o375,0}} || transpose(matrix(o359
o359)[1P[1@8

o378 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o378 : Matrix Rxy  <--- Rxy

i379 : o375

          4      2
o379 = 16x  - 16x  + 4

o379 : Rxy

i380 : frgram(o378)

o380 = (| .  4       |, MutableHashTable{...1...})
        | 4  -53/51  |
        | 40 -326/51 |
        | 4  3313/51 |

o380 : Sequence

i381 : o378

o381 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o381 : Matrix Rxy  <--- Rxy

i382 : lll o378
stdio:384:1:(1):[0]: no method for adjacent objects:
--            lll (of class Symbol)
--    SPACE   | 0                 16x4-16x2+4     | (of class Matrix)
--            | 16x4-16x2+4       0               |
--            | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
--            | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

i383 : lll o3lll[1P[1@(o378)
stdio:385:1:(1):[0]: no method for adjacent objects:
--            lll (of class Symbol)
--    SPACE   | 0                 16x4-16x2+4     | (of class Matrix)
--            | 16x4-16x2+4       0               |
--            | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
--            | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

i384 : lll(o378)i384 : ll[l[1[1P[1@L[1@L[1@L
stdio:386:1:(1):[0]: expected a matrix over the integers

i385 : o378

o385 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o385 : Matrix Rxy  <--- Rxy

i386 : smithNormalForm(o378)

o386 = (| 23225216x4-23225216x2+5806304 0      |, |
        | 0                             126224 |  |
        | 0                             0      |  |
        | 0                             0      |  |
        | 0                             0      |  |
       -------------------------------------------------------------------------
       126224                                                    
       0                                                         
       126224x+157780                                            
       -5048960x-5806304                                         
       258506752x4+1034027008x3+517013504x2-1193069248x-926357936
       -------------------------------------------------------------------------
       -32928                                                  
       0                                                       
       -32928x+2744                                            
       -87808x+1339072                                         
       -67436544x4-269746176x3-134873088x2+311235456x+241658592
       -------------------------------------------------------------------------
       -23324x-343                                                       
       0                                                                 
       -23324x2-24696x+686                                               
       779296x2+1031744x-170128                                          
       -47767552x5-191772672x4-98344960x3+207440912x2+129418016x-29961736
       -------------------------------------------------------------------------
       15824x3-15548x2-1640x-5456                                    |, |
       1                                                             |  |
       -2744x2-5488x-9604                                            |
       329280x2-43904x+362208                                        |
       -5619712x5-12644352x4-4214784x3-46285792x2+13500480x+57958768 |
       -------------------------------------------------------------------------
       -28x3-10x2+2x-33 2408x2-1506x+1559  |)
       40x3+4x2-60x+2   -3440x2+3036x+1818 |

o386 : Sequence

i387 : minimalPresentation(o378)

o387 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o387 : Matrix Rxy  <--- Rxy

i388 : minimalPresentation(o378)i388 : [4PsmithNormalForm(o378)i388 : [1@(smithNormalForm(o378))#2

o388 = | -28x3-10x2+2x-33 2408x2-1506x+1559  |
       | 40x3+4x2-60x+2   -3440x2+3036x+1818 |

                 2         2
o388 : Matrix Rxy  <--- Rxy

i389 : (smithNormalForm(o378))#1

o389 = | 126224                                                    
       | 0                                                         
       | 126224x+157780                                            
       | -5048960x-5806304                                         
       | 258506752x4+1034027008x3+517013504x2-1193069248x-926357936
       -------------------------------------------------------------------------
       -32928                                                  
       0                                                       
       -32928x+2744                                            
       -87808x+1339072                                         
       -67436544x4-269746176x3-134873088x2+311235456x+241658592
       -------------------------------------------------------------------------
       -23324x-343                                                       
       0                                                                 
       -23324x2-24696x+686                                               
       779296x2+1031744x-170128                                          
       -47767552x5-191772672x4-98344960x3+207440912x2+129418016x-29961736
       -------------------------------------------------------------------------
       15824x3-15548x2-1640x-5456                                    |
       1                                                             |
       -2744x2-5488x-9604                                            |
       329280x2-43904x+362208                                        |
       -5619712x5-12644352x4-4214784x3-46285792x2+13500480x+57958768 |

                 5         4
o389 : Matrix Rxy  <--- Rxy

i390 : (smithNormalForm(o378))#0

o390 = | 23225216x4-23225216x2+5806304 0      |
       | 0                             126224 |
       | 0                             0      |
       | 0                             0      |
       | 0                             0      |

                 5         2
o390 : Matrix Rxy  <--- Rxy

i391 : (smithNormalForm(o378))#1

o391 = | 126224                                                    
       | 0                                                         
       | 126224x+157780                                            
       | -5048960x-5806304                                         
       | 258506752x4+1034027008x3+517013504x2-1193069248x-926357936
       -------------------------------------------------------------------------
       -32928                                                  
       0                                                       
       -32928x+2744                                            
       -87808x+1339072                                         
       -67436544x4-269746176x3-134873088x2+311235456x+241658592
       -------------------------------------------------------------------------
       -23324x-343                                                       
       0                                                                 
       -23324x2-24696x+686                                               
       779296x2+1031744x-170128                                          
       -47767552x5-191772672x4-98344960x3+207440912x2+129418016x-29961736
       -------------------------------------------------------------------------
       15824x3-15548x2-1640x-5456                                    |
       1                                                             |
       -2744x2-5488x-9604                                            |
       329280x2-43904x+362208                                        |
       -5619712x5-12644352x4-4214784x3-46285792x2+13500480x+57958768 |

                 5         4
o391 : Matrix Rxy  <--- Rxy

i392 : (smithNormalForm(o378))#1 * o378

o392 = | 1265920x6-1117248x5-1934944x4+1117248x3+985504x2-279312x-167256
       | 80x3+8x2-120x+4                                                
       | 0                                                              
       | 0                                                              
       | 0                                                              
       -------------------------------------------------------------------------
       886144x6-554208x5-312432x4+554208x3-352176x2-138552x+143428 |
       56x3+20x2-4x+66                                             |
       0                                                           |
       0                                                           |
       0                                                           |

                 5         2
o392 : Matrix Rxy  <--- Rxy

i393 : o378

o393 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o393 : Matrix Rxy  <--- Rxy

i394 : o378_(1,1)

o394 = 0

o394 : Rxy

i395 : o378_(1,[1P2
stdio:397:5:(1):[0]: matrix column index 2 out of range 0 .. 1

i396 : o378_(1,[1P1

o396 = 0

o396 : Rxy

i397 : o378_(1,[1P[1@2

          3     2
o397 = 80x  + 8x  - 120x + 4

o397 : Rxy

i398 : o378

o398 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o398 : Matrix Rxy  <--- Rxy

i399 : o378_0

o399 = | 0                 |
       | 16x4-16x2+4       |
       | -32x3+16x2-16x+40 |
       | 80x3+8x2-120x+4   |

          4
o399 : Rxy

i400 : o378[1@g[1@c[1@d[1@(o378_0)
stdio:402:1:(1):[0]: no method found for applying gcd to:
                                                      4
     argument   :  | 0                 | (of class Rxy )
                   | 16x4-16x2+4       |
                   | -32x3+16x2-16x+40 |
                   | 80x3+8x2-120x+4   |

i401 : gcd(o378_0)i401 : [5Po378[1@f[1@l[1@a[1@t[1@t[1@e[1@n[1@(o378_0)
stdio:403:1:(1):[0]: no method found for applying flatten to:
                                                      4
     argument   :  | 0                 | (of class Rxy )
                   | 16x4-16x2+4       |
                   | -32x3+16x2-16x+40 |
                   | 80x3+8x2-120x+4   |

i402 : flatten(o378_0i402 : [1P[1P[1Pt[1[1P[1P[1P[1P

o402 = | 0                 |
       | 16x4-16x2+4       |
       | -32x3+16x2-16x+40 |
       | 80x3+8x2-120x+4   |

          4
o402 : Rxy

i403 : o378_{0}

o403 = | 0                 |
       | 16x4-16x2+4       |
       | -32x3+16x2-16x+40 |
       | 80x3+8x2-120x+4   |

                 4         1
o403 : Matrix Rxy  <--- Rxy

i404 : o378_{[1@f[1@l[1@a[1@t[1@t[1@e[1@n[1@(o378_{0})

o404 = | 0 16x4-16x2+4 -32x3+16x2-16x+40 80x3+8x2-120x+4 |

                 1         4
o404 : Matrix Rxy  <--- Rxy

i405 : flatten(o378_{0})i405 : [1@g[1@c[1@d[1@(flatten(o378_{0}))
stdio:407:1:(1):[0]: no method found for applying gcd to:
     argument   :  | 0 16x4-16x2+4 -32x3+16x2-16x+40 80x3+8x. (of class Matrix)

i406 : gcd(flatten(o378_{0}))i406 : [1P[1P[1P[1Pflatten(o378_{0})

o406 = | 0 16x4-16x2+4 -32x3+16x2-16x+40 80x3+8x2-120x+4 |

                 1         4
o406 : Matrix Rxy  <--- Rxy

i407 : flatten(o378_{0})i407 : [1@e[1@n[1@t[1@r[1@i[1@e[1@s[1@(flatten(o378_{0}))

               4      2           3      2                3     2
o407 = {{0, 16x  - 16x  + 4, - 32x  + 16x  - 16x + 40, 80x  + 8x  - 120x + 4}}

o407 : List

i408 : entries(flatten(o378_{0}))i408 : [1@g[1@c[1@d[1@(entries(flatten(o378_{0})))

              4      2           3      2                3     2
o408 = {0, 16x  - 16x  + 4, - 32x  + 16x  - 16x + 40, 80x  + 8x  - 120x + 4}

o408 : List

i409 : gcd(entries(flatten(o378_{0})))i409 : [1P[1P[1P[1Pentries(flatten(o378_{0}))

               4      2           3      2                3     2
o409 = {{0, 16x  - 16x  + 4, - 32x  + 16x  - 16x + 40, 80x  + 8x  - 120x + 4}}

o409 : List

i410 : entries(flatten(o378_{0}))#0
stdio:412:27:(1):[0]: key not found in hash table

i411 : entries(flatten(o378_{0}))_0

o411 = {0}

o411 : List

i412 : entries(flatten(o378_{0}))_1

           4      2
o412 = {16x  - 16x  + 4}

o412 : List

i413 : entries(flatten(o378_{0}))

               4      2           3      2                3     2
o413 = {{0, 16x  - 16x  + 4, - 32x  + 16x  - 16x + 40, 80x  + 8x  - 120x + 4}}

o413 : List

i414 : entries(flatten(o378_{0}))i414 : [1@g[1@c[1@d[1@(entries(flatten(o378_{0})))

              4      2           3      2                3     2
o414 = {0, 16x  - 16x  + 4, - 32x  + 16x  - 16x + 40, 80x  + 8x  - 120x + 4}

o414 : List

i415 : gcd(entries(flatten(o378_{0})))i415 : g[1@[1@c[1@d[1@(gcd(entries(flatten(o378_{0}))))
stdio:417:1:(1):[0]: not implemented yet

i416 : gcd(gcd(entries(flatten(o378_{0}))))i416 : gcd([5Pentries(flatten(o378_{0})))i416 : [Ko378

o416 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o416 : Matrix Rxy  <--- Rxy

i417 : o378_(1m0,1)

          4      2
o417 = 16x  - 16x  + 4

o417 : Rxy

i418 : o378_(0,1)i418 : [1@g[1@c[1@d[1@(o378_(0,1),o378_(0,2))
stdio:420:20:(1):[0]: matrix column index 2 out of range 0 .. 1

i419 : gcd(o378_(0,1),o378_(0,2[1P[1@1,[1P[1@0),o378_([1P[1@2,[1P[1@0))
stdio:421:1:(1):[0]: not implemented yet

i420 : o378

o420 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o420 : Matrix Rxy  <--- Rxy

i421 : o3[1@s[1@u[1@b[1@(o378,Rx)

o421 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                4        2
o421 : Matrix Rx  <--- Rx

i422 : [15@(reverse-i-search)`':g': gcd(o378_(1,0),o378_(2,0))(reverse-i-search)`g':[1@c':[1@d': gcd(o378_(0,1),o378_(0gcd([10@gcd(entries(flatten(o378_{0}[18Pi422 : gcd(gcd(entries(flatten(o378_{0})))[1[1[1P[1@4[1@2[1@1
stdio:424:1:(1):[0]: not implemented yet

i423 : gcd(gcd(entries(flatten(o421_{0}))))i423 : [24Psub(o378,Rx)i423 : [8Po3gcd(o378_(1,0),o378_(2,0[1P[1P[1P[1@4[1@2[1[1[1[1P[1@4[1@2[1@1
stdio:425:1:(1):[0]: not implemented yet

i424 : gcd(o421_(1,0),o421_(2,0))i424 : [1P[1P[1P[1Po421_(1,0),o421_(2,0)

           4      2           3      2
o424 = (16x  - 16x  + 4, - 32x  + 16x  - 16x + 40)

o424 : Sequence

i425 : o421_(1,0),o421_(2,0)i425 : [1@[1Po421_(1,0),o421_(2

          4      2
o425 = 16x  - 16x  + 4

o425 : Rx

i426 : gcd(x,x^2)
stdio:428:1:(1):[0]: not implemented yet

i427 : use Rx

o427 = Rx

o427 : PolynomialRing

i428 : use gcd(x,x^2)
stdio:430:1:(1):[0]: not implemented yet

i429 : gcdo
gcd              gcdCoefficients  gcdLLL           

i429 : gcdCoefficients (x,x^2)
stdio:431:1:(1):[0]: expected a polynomial ring over a field

i430 : gcdCoefficients (x,x^2)i430 : gcd[13P(x,x^2)i430 : [4Puse gcd(x,x^2)
stdio:432:1:(1):[0]: not implemented yet

i431 : basicRx = Q[x]

           4     3     2
o431 = - 4x  - 6x  - 6x  - 6x

o431 : Rx

i432 : Q[x]

           4     3     2
o432 = - 4x  - 6x  - 6x  - 6x

o432 : Rx

i433 : Q[Q[1@

o433 = QQ [x]

o433 : PolynomialRing

i434 : QQ[[1P[[10@basicRx = Q[x[1@Q

o434 = basicRx

o434 : PolynomialRing

i435 : use basicRx

o435 = basicRx

o435 : PolynomialRing

i436 : [15@(reverse-i-search)`':s': use basicu': sub(o378,Rx[1@b': [18Pi436 : sub(o378,Rx[1@b[1@a[1@s[1@i[1@c

o436 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                     4             2
o436 : Matrix basicRx  <--- basicRx

i437 : [15@(reverse-i-search)`':g': gcd(x,x^2[1@c':[1@d': [18Pi437 : 

o437 = x

o437 : basicRx

i438 : [15@(reverse-i-search)`':g': gcd(x,x^2[1@c':[1@d': gcd[13@Coefficientgcd[13gcd([16@o421_(1,0),o421_(2,0gcd([10@gcd(entries(flatten(o421_{0}[18Pi438 : gcd(gcd(entries(flatten(o421_{0}))[1P[1P[1@3[1@6

o438 = 1

o438 : basicRx

i439 : gcd(gcd(entries(flatten(o436_{0}))))i439 : gcd[1@C[1@o[10@efficients
stdio:441:1:(1):[0]: no method found for applying gcdCoefficients to:
     argument   :         4      2           3      2         . (of class List)
                   {0, 16x  - 16x  + 4, - 32x  + 16x  - 16x + .

i440 : gcdCoefficients(gcd(entries(flatten(o436_{0}))))i440 : gcd[12P(gcd(entries(flatten(o436_{0}))))i440 : [1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Pt[1[1P[1P[1P[1Po436_{0}))

o440 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                     4             2
o440 : Matrix basicRx  <--- basicRx

i441 : o436_0

o441 = | 0                 |
       | 16x4-16x2+4       |
       | -32x3+16x2-16x+40 |
       | 80x3+8x2-120x+4   |

              4
o441 : basicRx

i442 : o436_(0,0)

o442 = 0

o442 : basicRx

i443 : o436_(0,[1P1

          4      2
o443 = 16x  - 16x  + 4

o443 : basicRx

i444 : o436_(0,[1P2
stdio:446:5:(1):[0]: matrix column index 2 out of range 0 .. 1

i445 : o436_(0,1,0)

          4      2
o445 = 16x  - 16x  + 4

o445 : basicRx

i446 : o436_(1,[1P[1@2

            3      2
o446 = - 32x  + 16x  - 16x + 40

o446 : basicRx

i447 : o436_(2,[1P[1@3

          3     2
o447 = 80x  + 8x  - 120x + 4

o447 : basicRx

i448 : o436

o448 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                     4             2
o448 : Matrix basicRx  <--- basicRx

i449 : o436_(3,0)i449 : [1@g[1@c[1@d[1@(o[1@[1@4[1@3[1@6[1@_[1@([1@2[1@,[1@0[1@)[1@,o436_(3,0))

o449 = 1

o449 : basicRx

i450 : gcd(o436_(2,0),o436_(3,0))i450 : gcd[1@C[1@o[10@efficients

              25  2    15      81      5   2    9       41
o450 = {1, - ---*x  - ---*x + ----, - ---*x  - ---*x - ----}
             364      208     2912    182      728     1456

o450 : List

i451 : rowop = (rodest, source, multiple) -> idi451 : [Kmatrix(Rx^2)
stdio:453:1:(1):[0]: no method found for applying matrix to:
                     2
     argument   :  Rx  (of class Module)

i452 : matrix(Rx^2, {})
stdio:454:1:(1):[0]: no method found for applying matrix to:
                     2
     argument 1 :  Rx  (of class Module)
     argument 2 :  {} (of class List)

i453 : matrix(Rx^2, {[1@[[1@[1[1P[1@{}
stdio:455:1:(1):[0]: no method found for applying matrix to:
                     2
     argument 1 :  Rx  (of class Module)
     argument 2 :  {{}} (of class List)

i454 : id_Rx^2

o454 = map(Rx,Rx,{x, sqrt2})

o454 : RingMap Rx <--- Rx

i455 : id_Rx

o455 = map(Rx,Rx,{x, sqrt2})

o455 : RingMap Rx <--- Rx

i456 : id(Rx)
stdio:458:1:(1):[0]: no method for id Rx

i457 : diagonalMatrix (Rx,4,4)
stdio:459:1:(1):[0]: no method found for applying diagonalMatrix to:
     argument 1 :  Rx (of class PolynomialRing)
     argument 2 :  4 (of class ZZ)
     argument 3 :  4 (of class ZZ)

i458 : diagonalMatrix (Rx,4,4)i458 : [KdiagonalMatrix (Rx,4,4,{}

o458 = 0

                4        4
o458 : Matrix Rx  <--- Rx

i459 : diagonalMatrix (Rx,4,4,{[1@1

o459 = | 1 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o459 : Matrix Rx  <--- Rx

i460 : flatten(o459)

o460 = | 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 |

                1        16
o460 : Matrix Rx  <--- Rx

i461 : reshape(Rx^4, Rx^4, o460)

o461 = | 1 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o461 : Matrix Rx  <--- Rx

i462 : kdreshape(Rx^4, Rx^4, o460)i462 : [12Pflatten(o459)i462 : [14@diagonalMatrix (Rx,4,4,{1})i462 : [1@kd[1@[1@e[1@l[1@t[1@a[1@ [1@=[1@ [1@([1@r[1@i[1@n[1@g[1@,[1@s[1@i[1@z[1@e[1@,[1@i[1@,[1@j[1@)[1@ [1@-[1@>[1@ diagonalMatrix ([1@r[1@i[1@n[1@g[1P[1P,[1P[1@s[1@i[1@z[1@e,[1P[1@z[1@[1[1P[1@s[1@i[1@z[1[1@f[1@l[1@a[1@t[1@t[1@e[1@n[1@(diagonalMatrix (ring,size,size,{1}rflatten(diagonalMatrix (ring,size,size,{1})) [A462 : kdelta = (ring,size,i,j) -> reflatten(diagonalMatrix (ring,size,size,{1}
)[A462 : kdelta = (ring,size,i,j) -> rflatten(diagonalMatrix (ring,size,size,{1})
[K[Ai462 : kdelta = (ring,size,i,j) -> [1P
[K[Ai462 : kdelta = (ring,size,i,j) -> sflatten(diagonalMatrix (ring,size,size,{1})) [A462 : kdelta = (ring,size,i,j) -> shflatten(diagonalMatrix (ring,size,size,{1}
)[A462 : kdelta = (ring,size,i,j) -> shiflatten(diagonalMatrix (ring,size,size,{1}))[A62 : kdelta = (ring,size,i,j) -> shifflatten(diagonalMatrix (ring,size,size,{1}))[A2 : kdelta = (ring,size,i,j) -> shiftflatten(diagonalMatrix (ring,size,size,{1[1@}[A62 : kdelta = (ring,size,i,j) -> shift(flatten(diagonalMatrix (ring,size,size,{[1@1[A62 : kdelta = (ring,size,i,j) -> shift(
{1})),size*i+j)kdelta = (ring,size,i,j) -> rshift(flatten(diagonalMatrix (ring,size,size,[1@{[A62 : kdelta = (ring,size,i,j) -> reshift(flatten(diagonalMatrix (ring,size,size[1@,[A62 : kdelta = (ring,size,i,j) -> resshift(flatten(diagonalMatrix (ring,size,siz[1@e[A62 : kdelta = (ring,size,i,j) -> reshshift(flatten(diagonalMatrix (ring,size,si[1@z[A62 : kdelta = (ring,size,i,j) -> reshashift(flatten(diagonalMatrix (ring,size,s[1@i[A62 : kdelta = (ring,size,i,j) -> reshapshift(flatten(diagonalMatrix (ring,size,[1@s[A62 : kdelta = (ring,size,i,j) -> reshapeshift(flatten(diagonalMatrix (ring,size[1@,[A62 : kdelta = (ring,size,i,j) -> reshape(shift(flatten(diagonalMatrix (ring,siz[1@e[A62 : kdelta = (ring,size,i,j) -> reshape(rshift(flatten(diagonalMatrix (ring,si[1@z[A62 : kdelta = (ring,size,i,j) -> reshape(rishift(flatten(diagonalMatrix (ring,s[1@i[A62 : kdelta = (ring,size,i,j) -> reshape(rinshift(flatten(diagonalMatrix (ring,[1@s[A62 : kdelta = (ring,size,i,j) -> reshape(ringshift(flatten(diagonalMatrix (ring[1@,[A62 : kdelta = (ring,size,i,j) -> reshape(ring^shift(flatten(diagonalMatrix (rin[1@g[A62 : kdelta = (ring,size,i,j) -> reshape(ring^sshift(flatten(diagonalMatrix (ri[1@n[A62 : kdelta = (ring,size,i,j) -> reshape(ring^sishift(flatten(diagonalMatrix (r[1@i[A62 : kdelta = (ring,size,i,j) -> reshape(ring^sizshift(flatten(diagonalMatrix ([1@r[A62 : kdelta = (ring,size,i,j) -> reshape(ring^sizeshift(flatten(diagonalMatrix [1@([A62 : kdelta = (ring,size,i,j) -> reshape(ring^size,shift(flatten(diagonalMatrix[1@ [A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, shift(flatten(diagonalMatri[1@x[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, rshift(flatten(diagonalMatr[1@i[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, rishift(flatten(diagonalMat[1@r[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, rinshift(flatten(diagonalMa[1@t[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ringshift(flatten(diagonalM[1@a[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^shift(flatten(diagonal[1@M[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^sshift(flatten(diagona[1@l[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^sishift(flatten(diagon[1@a[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^sizshift(flatten(diago[1@n[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^sizeshift(flatten(diag[1@o[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size,shift(flatten(dia[1@g[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, shift(flatten(di[1@a[A62 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, 
iagonalMatrix (ring,size,size,{1})),size*i+j))

o462 = kdelta

o462 : FunctionClosure

i463 : kdelta(Rx,4,0,0)
stdio:464:59:(1):[1]: no method for adjacent objects:
--            shift (of class Symbol)
--    SPACE   (| 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 |, 0) (of class Sequence)

i464 : hehelp(shift)

o464 = shift
       *****

       For the programmer
       ==================

       The object "shift" is a symbol.

o464 : DIV

i465 : help(shift)i465 : [5@kdelta(Rx,4,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, shift(flatten(diiagonalMatrix (ring,size,size,{1})),size*i+j))[Ai465 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rshift(flatten(d[1@i[A65 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, roshift(flatten([1@d[A65 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotshift(flatten[1@([A65 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotashift(flatte[1@n[A65 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotatshift(fla
[1@t[A465 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotateshift(flat[1@t[A65 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotatehift(flatt[1P[A465 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotateift(flat
[1P[Ai465 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotateft(flatten[1P[A465 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotatet(flatten([1P[A465 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(flatten(d[1P[A465 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate

--warning: kdelta redefined

o465 = kdelta

o465 : FunctionClosure

i466 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(flatten(ddiagonalMatrix (ring,size,size,{1})),size*i+j))[Ai466 : help(shift)[K
[K[Ai466 : help(shift)i466 : [5@kdelta(Rx,4,0,0)
stdio:467:59:(1):[1]: no method found for applying rotate to:
     argument 1 :  | 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | (of class Matrix)
     argument 2 :  0 (of class ZZ)

i467 : elements(o461)
stdio:469:1:(1):[0]: no method found for applying elements to:
     argument   :  | 1 0 0 0 | (of class Matrix)
                   | 0 0 0 0 |
                   | 0 0 0 0 |
                   | 0 0 0 0 |

i468 : o461

o468 = | 1 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o468 : Matrix Rx  <--- Rx

i469 : entries(o461)

o469 = {{1, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}, {0, 0, 0, 0}}

o469 : List

i470 : entries(o461)i470 : [1@f[1@l[1@a[1@t[1@te[1@[1@n[1@(entries(o461))

o470 = {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

o470 : List

i471 : flatten(entries(o461))i471 : [9Pentries(o461)i471 : o461elements(o461)i471 : [2@kdelta(Rx,4,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(flatten(ddiagonalMatrix (ring,size,size,{1})),size*i+j))[Ai471 : 
diagonalMatrix (ring,size,size,{1})),size*i+j[Ai471 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(flatten
[1@e[1@n[1@t[1@r[1@i[1@e[1@s[1@(diagonalMatrix (ring,size,size,{1}))[1@
--warning: kdelta redefined

o471 = kdelta

o471 : FunctionClosure

i472 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(flatten(eentries(diagonalMatrix (ring,size,size,{1}))),size*i+j))[Ai472 : flatten(entries(o461))[K
[K[Ai472 : flatten(entries(o461))i472 : [9Pentries(o461)i472 : o461elements(o461)i472 : [2@kdelta(Rx,4,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(flatten(ddiagonalMatrix (ring,size,size,{1})),size*i+j))[Ai472 : kdelta(Rx,4,0,0)[K
[K[Ai472 : kdelta(Rx,4,0,0)
stdio:473:59:(1):[1]: no method found for applying rotate to:
     argument 1 :  {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, . (of class List)
     argument 2 :  0 (of class ZZ)

i473 : kdelta(Rx,4,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(flatten(eentries(diagonalMatrix (ring,size,size,{1}))),size*i+j))[Ai473 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(sflatten([1@e[A73 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(siflatten[1@([A73 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(sizflatte[1@n[A73 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(sizefla
[1@t[A473 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*flat[1@t[A73 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*iflat[1@t[A3 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*i+fl[1@a[A73 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*i+jf[1@l[1@,flatten(entries(diagonalMatrix (ring,size,size,{1}))),size*i+)
       )
--warning: kdelta redefined

o473 = kdelta

o473 : FunctionClosure

i474 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*i+j,,flatten(entries(diagonalMatrix (ring,size,size,{1})))))
--warning: kdelta redefined

o474 = kdelta

o474 : FunctionClosure

i475 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*i+j,,flatten(entries(diagonalMatrix (ring,size,size,{1})))))[Ai475 : )[K
[K[Ai475 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*i+j,,flatten(entries(diagonalMatrix (ring,size,size,{1}))))[Ai475 : kdelta(Rx,4,0,0)[K
[K[Ai475 : kdelta(Rx,4,0,0)
stdio:477:29:(1):[1]: no method found for applying reshape to:
                     4
     argument 1 :  Rx  (of class Module)
                     4
     argument 2 :  Rx  (of class Module)
     argument 3 :  {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, . (of class List)

i476 : matrix(o470)
stdio:479:1:(1):[0]: expected a table of ring elements or matrices, or a list of elements of the same module

i477 : matrix(o470[1@R[1@x[1@,[1@ 
stdio:480:1:(1):[0]: expected a table

i478 : o470

o478 = {1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

o478 : List

i479 : o4matrix(Rx, o470[1@{o470})

o479 = | 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 |

                1        16
o479 : Matrix Rx  <--- Rx

i480 : matrix(Rx, {o470})i480 : o470matrix(Rx, o470[4Po470)i480 : [4@kdelta(Rx,4,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, rotate(size*i+j,,flatten(entries(diagonalMatrix (ring,size,size,{1})))))[Ai480 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, mrotate(size*i+j[1@,[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, marotate(size*i+[1@j[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrotate(size*i[1@+[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrrotate(size*[1@i[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrirotate(size[1@*[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrixrotate(siz[1@e[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(rotate(si[1@z[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Rrotate(s[1@i[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Rirotate([1@s[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Rinrotate[1@([A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Ringrotat[1@e[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Ring,rota[1@t[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Ring, rot[1@a[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Ring, {ro[1@t[A80 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Ring, {
otate(size*i+j,flatten(entries(diagonalMatrix (ring,size,size,{1}))))))} ))
--warning: kdelta redefined

o480 = kdelta

o480 : FunctionClosure

i481 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Ring, {rootate(size*i+j,flatten(entries(diagonalMatrix (ring,size,size,{1}))))} ))[Ai481 : matrix(Rx, {o470})[K
[K[Ai481 : matrix(Rx, {o470})i481 : o470matrix(Rx, o470[4Po470)i481 : [4@kdelta(Rx,4,0,0)
stdio:483:59:(1):[1]: no method found for applying matrix to:
     argument 1 :  Ring (of class Type)
     argument 2 :  {{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,. (of class List)

i482 : kdelta(Rx,4,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(Ring, {rootate(size*i+j,flatten(entries(diagonalMatrix (ring,size,size,{1}))))} ))[Ai482 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ing, {rot[1P[A482 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {ro[1@t[A82 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(r

--warning: kdelta redefined

o482 = kdelta

o482 : FunctionClosure

i483 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {rootate(size*i+j,flatten(entries(diagonalMatrix (ring,size,size,{1}))))} ))[Ai483 : kdelta(Rx,4,0,0)[K
[K[Ai483 : kdelta(Rx,4,0,0)

o483 = | 1 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o483 : Matrix Rx  <--- Rx

i484 : kdelta(Rx,4,0,[1P[1@1

o484 = | 0 0 0 1 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o484 : Matrix Rx  <--- Rx

i485 : kdelta(Rx,4,1,[1P[1@2

o485 = | 0 0 1 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o485 : Matrix Rx  <--- Rx

i486 : kdelta(Rx,4,2,[1P[1@3

o486 = | 0 1 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o486 : Matrix Rx  <--- Rx

i487 : kdelta(Rx,4,3,[1P[1@0,[1P1

o487 = | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 1 |

                4        4
o487 : Matrix Rx  <--- Rx

i488 : kdelta(Rx,4,0,3,2,1,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {rootate(size*i+j,flatten(entries(diagonalMatrix (ring,size,size,{1}))))} )[A kdelta(Rx,4,0,0)[K
[K[Ai488 : kdelta(Rx,4,0,[1P1

o488 = | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 1 |

                4        4
o488 : Matrix Rx  <--- Rx

i489 : kdelta(Rx,4,0,[1P2

o489 = | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 1 |
       | 0 0 0 0 |

                4        4
o489 : Matrix Rx  <--- Rx

i490 : kdelta(Rx,4,0,[1P3

o490 = | 0 0 0 0 |
       | 0 0 0 1 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o490 : Matrix Rx  <--- Rx

i491 : kdelta(Rx,4,0,3,2,1,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {rootate(size*i+j,flatten(entries(diagonalMatrix (ring,size,size,{1}))))} )[1@-[1@(size*i+j[1@),flatten(entries(diagonalMatrix (ring,size,size,{1}))))} ))
--warning: kdelta redefined

o491 = kdelta

o491 : FunctionClosure

i492 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {rootate(-(size*i+j),flatten(entries(diagonalMatrix (ring,size,size,{1}))))} ))[Ai492 : kdelta(Rx,4,0,3)[K
[K[Ai492 : kdelta(Rx,4,0,1)

o492 = | 0 0 0 0 |
       | 1 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o492 : Matrix Rx  <--- Rx

i493 : kdelta(Rx,4,0,[1P2

o493 = | 0 0 0 0 |
       | 0 0 0 0 |
       | 1 0 0 0 |
       | 0 0 0 0 |

                4        4
o493 : Matrix Rx  <--- Rx

i494 : kdelta(Rx,4,0,[1P3

o494 = | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 1 0 0 0 |

                4        4
o494 : Matrix Rx  <--- Rx

i495 : kdelta(Rx,4,0,[1P[1P[1@1,0

o495 = | 0 1 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o495 : Matrix Rx  <--- Rx

i496 : kdelta(Rx,4,1,[1P1

o496 = | 0 0 0 0 |
       | 0 1 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o496 : Matrix Rx  <--- Rx

i497 : kdelta(Rx,4,1,[1P2

o497 = | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 1 0 0 |
       | 0 0 0 0 |

                4        4
o497 : Matrix Rx  <--- Rx

i498 : kdelta(Rx,4,1,[1P0

o498 = | 0 1 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o498 : Matrix Rx  <--- Rx

i499 : o376

o499 = | 16x4-16x2+4       0               |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |

                 3         2
o499 : Matrix Rxy  <--- Rxy

i500 : o398

o500 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o500 : Matrix Rxy  <--- Rxy

i501 : o398_(2,0)

            3      2
o501 = - 32x  + 16x  - 16x + 40

o501 : Rxy

i502 : o398_(2,kdelta(Rx,4,1,[1P[1@2

o502 = | 0 0 1 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |
       | 0 0 0 0 |

                4        4
o502 : Matrix Rx  <--- Rx

i503 : kdelta(Rx,4,2,0)i503 : [6Po398_(2,kdelta(Rx,4,1,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {rootate(-(size*i+j),flatten(entries(diagonalMatrix (ring,size,size,{1}))))} ))[Ai503 : kdelta(Rx,4,0,3)[K
[K[Ai503 : kdelta(Rx,4,0, = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {rootate(-(size*i+j),flatten(entries(diagonalMatrix (ring,size,size,{1}))))} )[1P[1@j+[1P[1@i
--warning: kdelta redefined

o503 = kdelta

o503 : FunctionClosure

i504 : kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size, matrix(ring, {rootate(-(size*j+i),flatten(entries(diagonalMatrix (ring,size,size,{1}))))} ))[Ai504 : kdelta(Rx,4,2,0)[K
[K[Ai504 : kdelta(Rx,4,2,0)

o504 = | 0 0 0 0 |
       | 0 0 0 0 |
       | 1 0 0 0 |
       | 0 0 0 0 |

                4        4
o504 : Matrix Rx  <--- Rx

i505 : ident kdelta(Rx,4,2,0)i505 : [1@i[1@d[1@e[1@n[1@t[1@ [1@=[1@ kdelta(Rx,4,2,[1P[1@0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R x,4,3,3)

o505 = | 1 0 0 0 |
       | 0 1 0 0 |
       | 0 0 1 0 |
       | 0 0 0 1 |

                4        4
o505 : Matrix Rx  <--- Rx

i506 : [15@(reverse-i-search)`':g': kdelta = (ring,size,i,j) -> reshape(ring^size, ring^size,  matrix(ring, {rotate(-(size*j+i),flatten(entries(diagonalMatrix (ring,size,size,,{1}))))} ))[A, {rotate(-(size*j+i),flatten(entries(diagonalMatrix (rin[A(reverse-i-search)`g[18Pc': gcdCoefficients(o436_(2,0),o436_(3,0))
[K
[K[A[A(reverse-i-search)`gc':[1@d': [18Pi506 : 

              25  2    15      81      5   2    9       41
o506 = {1, - ---*x  - ---*x + ----, - ---*x  - ---*x - ----}
             364      208     2912    182      728     1456

o506 : List

i507 : o436

o507 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                     4             2
o507 : Matrix basicRx  <--- basicRx

i508 : o398

o508 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                 4         2
o508 : Matrix Rxy  <--- Rxy

i509 : o398 == o436

o509 = false

i510 : o398 == o4[4gcdCoefficients(o436_(2,0),o436_(3,0))

              25  2    15      81      5   2    9       41
o510 = {1, - ---*x  - ---*x + ----, - ---*x  - ---*x - ----}
             364      208     2912    182      728     1456

o510 : List

i511 : o436

o511 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                     4             2
o511 : Matrix basicRx  <--- basicRx

i512 : o4gcdCoefficients(o436_(2,0),o436_(3,0))i512 : o398 == o436[4gcdCoefficients(o436_(2,0),o436_(3,0))#1
stdio:515:1:(1):[0]: no method found for applying gcdCoefficients to:
                      3     2
     argument   :  80x  + 8x  - 120x + 4 (of class basicRx)

i513 : gcdCoefficients(o436_(2,0),o436_(3,0))[1@)i513 : [1@(

          25  2    15      81
o513 = - ---*x  - ---*x + ----
         364      208     2912

o513 : basicRx

i514 : (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0)

o514 = | 0                         0 0 0 |
       | 0                         0 0 0 |
       | -25/364x2-15/208x+81/2912 0 0 0 |
       | 0                         0 0 0 |

                     4             4
o514 : Matrix basicRx  <--- basicRx

i515 : [15@(reverse-i-search)`':i': (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRRx,4,2,0)[Ai-search)`i': (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(bas(reverse-i-search)`id': ident = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4[16@,2,2) + kdelta(Rx,4,3,3[e': ident = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,[1@4[Aeverse-i-search)`ide':n': ident = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx[1@,[Aeverse-i-search)`iden': i515 : ident = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2
x,4,3,3)[K[ident = ki515 : ident( = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R[1@x[A15 : ident(r = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1@R[A15 : ident(ri = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta[1@([A15 : ident(rin = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelt[1@a[A15 : ident(ring = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdel[1@t[A15 : ident(ring, = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kde[1@l[A15 : ident(ring,s = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kd[1@e[A15 : ident(ring,si = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + k[1@d[A15 : ident(ring,siz = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + [1@k[A15 : ident(ring,size = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) +[1@ [A15 : ident(ring,size) = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) [1@+[A15 : ident(ring,size = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) +[1P[A515 : ident(ring,siz = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + [1P[A515 : ident(ring,si = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + k[1P[A515 : ident(ring,s = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kd[1P[A515 : ident(ring, = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kde[1P[A515 : ident(ring = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdel[1P[A515 : ident(rin = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelt[1P[A515 : ident(ri = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta[1P[A515 : ident(r = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1P[A515 : ident( = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R[1P[A515 : ident = kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta(Rx[1P[A515 : ident = (kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R[1@x[A15 : ident = (rkdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1@R[A15 : ident = (rikdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta[1@([A15 : ident = (rinkdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelt[1@a[A15 : ident = (ringkdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdel[1@t[A15 : ident = (ring,kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kde[1@l[A15 : ident = (ring,skdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kd[1@e[A15 : ident = (ring,sikdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + k[1@d[A15 : ident = (ring,sizkdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + [1@k[A15 : ident = (ring,sizekdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) +[1@ [A15 : ident = (ring,size kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) [1@+[A15 : ident = (ring,size -kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2)[1@ [A15 : ident = (ring,size kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) [1P[A515 : ident = (ring,sizekdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) +[1P[A515 : ident = (ring,size)kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) [1@+[A15 : ident = (ring,size) kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2)[1@ [A15 : ident = (ring,size) -kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2[1@)[A15 : ident = (ring,size) ->kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,[1@2[A15 : ident = (ring,size) -> kdelta(Rx,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2[1@,[A15 : ident = (ring,size) -> kdelta(x,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,[1P[A515 : ident = (ring,size) -> kdelta(,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2[1P[A515 : ident = (ring,size) -> kdelta(4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2)[1P[A515 : ident = (ring,size) -> kdelta(,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) [1P[A515 : ident = (ring,size) -> kdelta(r,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2)[1@ [A15 : ident = (ring,size) -> kdelta(ri,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2[1@)[A15 : ident = (ring,size) -> kdelta(rin,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,[1@2[A15 : ident = (ring,size) -> kdelta(ring,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2[1@,[A15 : ident = (ring,size) -> kdelta(ring,,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,[1@2[A15 : ident = (ring,size) -> kdelta(ring,s,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4[1@,[A15 : ident = (ring,size) -> kdelta(ring,si,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,[1@4[A15 : ident = (ring,size) -> kdelta(ring,siz,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx[1@,[A15 : ident = (ring,size) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(R[1@x[A15 : ident = (ring,size) -> kdelta(ring,size,0,0) + kdelta(i515 : ident = (ring,i515 : ident = ring,size) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx[1P[A515 : ident = ing,size) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,[1P[A515 : ident = ng,size) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4[1P[A515 : ident = g,size) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,[1P[A515 : ident = ,size) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2[1P[A515 : ident = size) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,[1P[A515 : ident = ize) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2[1P[A515 : ident = ze) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2)[1P[A515 : ident = e) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) [1P[A515 : ident = ) -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) +[1P[A515 : ident =  -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + [1P[A515 : ident = -> kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + k[1P[A515 : ident = > kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kd[1P[A515 : ident =  kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kde[1P[A515 : ident = kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdel[1P[A515 : ident = kdelta(ing,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelt[1P[A515 : ident = kdelta(ng,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta[1P[A515 : ident = kdelta(g,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1P[A515 : ident = kdelta(,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R[1P[A515 : ident = kdelta(r,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1@R[A15 : ident = kdelta(ri,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta[1@([A15 : ident = kdelta(rin,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelt[1@a[A15 : ident = kdelta(ring,size,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdel[1@t[A15 : ident = kdelta(ring,ize,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelt[1P[A515 : ident = kdelta(ring,ze,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta[1P[A515 : ident = kdelta(ring,e,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1P[A515 : ident = kdelta(ring,,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R[1P[A515 : ident = kdelta(ring,4,0,0) + kdelta(Rx,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1@R[A15 : ident = kdelta(ring,4,0,0) + kdelta(x,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R[1P[A515 : ident = kdelta(ring,4,0,0) + kdelta(,4,1,1) + kdelta(Rx,4,2,2) + kdelta(Rx[1P[A515 : ident = kdelta(ring,4,0,0) + kdelta(r,4,1,1) + kdelta(Rx,4,2,2) + kdelta(R[1@x[A15 : ident = kdelta(ring,4,0,0) + kdelta(ri,4,1,1) + kdelta(Rx,4,2,2) + kdelta([1@R[A15 : ident = kdelta(ring,4,0,0) + kdelta(rin,4,1,1) + kdelta(Rx,4,2,2) + kdelta[1@([A15 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(Rx,4,2,2) + kdelt[1@a[A15 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(x,4,2,2) + kdelta[1P[A515 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(,4,2,2) + kdelta([1P[A515 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(r,4,2,2) + kdelta[1@([A15 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ri,4,2,2) + kdelt[1@a[A15 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(rin,4,2,2) + kdel[1@t[A15 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) + kde[1@l[A15 : ident = kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) + k
elta([1P[1P[1@r[1@i[1@n[1@gident = rkdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) + kd[1@e[A15 : ident = rikdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) + k[1@d[A15 : ident = rinkdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) + [1@k[A15 : ident = ringkdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) +[1@ [A15 : ident = ring kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) [1@+[A15 : ident = ring _kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2)[1@ [A15 : ident = ring kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2) [1P[A515 : ident = ring -kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2)[1@ [A15 : ident = ring ->kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,2[1@)[A15 : ident = ring -> kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,[1@2[A15 : ident = ring -> 


o515 = ident

o515 : FunctionClosure

i516 : ident(basicRx)

o516 = | 1 0 0 0 |
       | 0 1 0 0 |
       | 0 0 1 0 |
       | 0 0 0 1 |

                     4             4
o516 : Matrix basicRx  <--- basicRx

i517 : ident(basicRx = ring -> kdelta(ring,4,0,0) + kdelta(ring,4,1,1) + kdelta(ring,4,2,,2) + kdelta(ring,4,3,3)[Ai517 : [7P(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0)
[K[Ai517 : (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0)i517 : [1@i[1@d[1@e[1@n[1@t([1@a(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0) [A517 : ident([1P
[K[Ai517 : ident(b(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0) [A517 : ident(ba(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0))[A517 : ident(bas(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0)[A17 : ident(basi(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2,0)[A7 : ident(basic(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,2[1@,[A17 : ident(basicR(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4,[1@2[A17 : ident(basicRx(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,4[1@,[A17 : ident(basicRx)(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx,[1@4[A17 : ident(basicRx) (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicRx[1@,[A17 : ident(basicRx) +(gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basicR[1@x[A17 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basic[1@R[A17 : ident(basicRx) + 


o517 = | 1                         0 0 0 |
       | 0                         1 0 0 |
       | -25/364x2-15/208x+81/2912 0 1 0 |
       | 0                         0 0 1 |

                     4             4
o517 : Matrix basicRx  <--- basicRx

i518 : i517 * o436
stdio:521:6:(1):[0]: no method for binary operator * applied to objects:
--            i517 (of class Symbol)
--      *     | 0                 16x4-16x2+4     | (of class Matrix)
--            | 16x4-16x2+4       0               |
--            | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
--            | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

i519 : i517 * o436i519 : [1P[1@o

o519 = | 0                 16x4-16x2+4                                          
       | 16x4-16x2+4       0                                                    
       | -32x3+16x2-16x+40 -100/91x6-15/13x5+281/182x4+1055/13x3+1325/182x2-6255
       | 80x3+8x2-120x+4   56x3+20x2-4x+66                                      
       -------------------------------------------------------------------------
                     |
                     |
       /52x+2993/728 |
                     |

                     4             2
o519 : Matrix basicRx  <--- basicRx

i520 : o517

o520 = | 1                         0 0 0 |
       | 0                         1 0 0 |
       | -25/364x2-15/208x+81/2912 0 1 0 |
       | 0                         0 0 1 |

                     4             4
o520 : Matrix basicRx  <--- basicRx

i521 : o517 * o436i521 : [1P[1P[1P[1P[1P[1P[1P

o521 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                     4             2
o521 : Matrix basicRx  <--- basicRx

i522 : o43517 * o436i522 : i517 * o436i522 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basiccRx,4,2,[1P[1@0,[1P2

o522 = | 1 0 -25/364x2-15/208x+81/2912 0 |
       | 0 1 0                         0 |
       | 0 0 1                         0 |
       | 0 0 0                         1 |

                     4             4
o522 : Matrix basicRx  <--- basicRx

i523 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basiccRx,4,0,2)[o436[K
[K[Ai523 : o43517 * o436i523 : o5[1P[1P[1@2[1@2

o523 = | 200/91x5+110/91x4-86/91x3-209/182x2-303/91x+405/364
       | 16x4-16x2+4                                        
       | -32x3+16x2-16x+40                                  
       | 80x3+8x2-120x+4                                    
       -------------------------------------------------------------------------
       -500/91x5+881/91x4+900/91x3-2693/364x2-330/91x+2993/728 |
       0                                                       |
       80x3+8x2-120x+4                                         |
       56x3+20x2-4x+66                                         |

                     4             2
o523 : Matrix basicRx  <--- basicRx

i524 : o522 * o436i524 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basiccRx,4,0,2) + (gcdCoefficients (o436_(2,0),o436_(3,0))#2 * kdelta(basicRx,4,0,3)
       )
stdio:527:127:(1):[0]: array index 2 out of bounds 0 .. 1

i525 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basiccRx,4,0,2) + (gcdCoefficients (o436_(2,0),o436_(3,0))#2 * kdelta(basicRx,4,0,)#2 * kdelta(basicRx,4,0,3) [ARx,4,0,2) + (gcdCoefficients (o436_(2,0),o436_(3,0)))
[AcRx,4,0,2) + (gcdCoefficients (o436_(2,0),o436_(3,0)))#2 * kdelta(basicRx,4,0,3[K)

o525 = | 1 0 -25/364x2-15/208x+81/2912 -5/182x2-9/728x-41/1456 |
       | 0 1 0                         0                       |
       | 0 0 1                         0                       |
       | 0 0 0                         1                       |

                     4             4
o525 : Matrix basicRx  <--- basicRx

i526 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basiccRx,4,0,2) + (gcdCoefficients (o436_(2,0),o436_(3,0)))#2 * kdelta(basicRx,4,0,3) [A[Ai526 : )[K
[K
[K[A[Ai526 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basiccRx,4,0,2) + (gcdCoefficients (o436_(2,0),o436_(3,0))#2 * kdelta(basicRx,4,0,3)[Ai526 : o522 * o436[K
[K[Ai526 : o522 * o436i526 : ident(basicRx) + (gcdCoefficients(o436_(2,0),o436_(3,0)))#1 * kdelta(basiccRx,4,0,2)[o522 * o436[K
[K[Ai526 : o522 * o436i526 : o52[1P[1@5

o526 = | 1                 -640/91x5+768/91x4+744/91x3-885/91x2-394/91x+205/91 |
       | 16x4-16x2+4       0                                                   |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4                                     |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66                                     |

                     4             2
o526 : Matrix basicRx  <--- basicRx

i527 : ident(basicRx) + o526_(1,0) * kdelta(basicRx,0,1) + oi527 : ident(basicRx) [1P[1@- o526_(1,0) * kdelta(basicRx,[1P[1@1,[1P[1@0) - o526_(2,0) * kdelta(b asicRx,2,0) - o526_(3,0) * kdelta(basicRx,3,0)
stdio:506:26:(1):[0]: expected 4 arguments, but got 3

i528 : ident(basicRx) - o526_(1,0) * kdelta(basicRx,1,0) - o526_(2,0) * kdelta(baasicRx,2,0) - o526_(3,0) * kdelta(basicRx,3,0)[Ai528 : ident(basicRx) - o526_(1,0) * kdelta(basicRx,41,0) - o526_(2,0) * kdelta(b[1@a[A28 : ident(basicRx) - o526_(1,0) * kdelta(basicRx,4,1,0) - o526_(2,0) * kdelta([1@b[A28 : ident(basicRx) - o526_(1,0) * kdelta(basicRx,4,1,0) - o526_(2,0) * kdelt
(basicRx,[1@4[1@,2,0) - o526_(3,0) * kdelta(basicRx,[1@4[1@,3,0)

o528 = | 1                0 0 0 |
       | -16x4+16x2-4     1 0 0 |
       | 32x3-16x2+16x-40 0 1 0 |
       | -80x3-8x2+120x-4 0 0 1 |

                     4             4
o528 : Matrix basicRx  <--- basicRx

i529 : o528 * o526

o529 = | 1 -640/91x5+768/91x4+744/91x3-885/
       | 0 10240/91x9-12288/91x8-22144/91x7
       | 0 -20480/91x8+34816/91x7+1280/91x6
       | 0 51200/91x8-56320/91x7-20352/13x6
       -------------------------------------------------------------------------
       91x2-394/91x+205/91                                                   |
       +26448/91x6+20768/91x5-20512/91x4-9280/91x3+6820/91x2+1576/91x-820/91 |
       -2336/91x5-1328/7x4-23776/91x3+3792/13x2+1160/13x-7836/91             |
       +159568/91x5+124808/91x4-117328/91x3-43560/91x2+25812/91x+5186/91     |

                     4             2
o529 : Matrix basicRx  <--- basicRx

i530 : o529o529[Ko529 * 91

o530 = | 91 -640x5+768x4+744x3-885x2-394x+205                                  
       | 0  10240x9-12288x8-22144x7+26448x6+20768x5-20512x4-9280x3+6820x2+1576x
       | 0  -20480x8+34816x7+1280x6-2336x5-17264x4-23776x3+26544x2+8120x-7836  
       | 0  51200x8-56320x7-142464x6+159568x5+124808x4-117328x3-43560x2+25812x+
       -------------------------------------------------------------------------
            |
       -820 |
            |
       5186 |

                     4             2
o530 : Matrix basicRx  <--- basicRx

i531 : gcdCoefficients (o530_(0,0), o530_(0,1))

            1
o531 = {1, --, 0}
           91

o531 : List

i532 : gcdCoefficients (o530_(0,0), o530_(0,1)[1P[1@[1P[1@1), o530_(1,1))

            5       4       3       2
o532 = {640x  - 768x  - 744x  + 885x  + 394x - 205, -1, 0}

o532 : List

i533 : gcdCoefficients (o530_(0,1), o530_(1,1))i533 : [1P[1P[1P[1P[1P[1Pf[1[1P[1P[1P[1P[1P[1P[1P[1P[1P

              5       4       3       2                     9         8  
o533 = (- 640x  + 768x  + 744x  - 885x  - 394x + 205, 10240x  - 12288x  -
       -------------------------------------------------------------------------
             7         6         5         4        3        2
       22144x  + 26448x  + 20768x  - 20512x  - 9280x  + 6820x  + 1576x - 820)

o533 : Sequence

i534 : (o530_(0,1), o530_(1,1))i534 : [1@g[1@c[1@d

           5       4       3       2
o534 = 640x  - 768x  - 744x  + 885x  + 394x - 205

o534 : basicRx

i535 : o530

o535 = | 91 -640x5+768x4+744x3-885x2-394x+205                                  
       | 0  10240x9-12288x8-22144x7+26448x6+20768x5-20512x4-9280x3+6820x2+1576x
       | 0  -20480x8+34816x7+1280x6-2336x5-17264x4-23776x3+26544x2+8120x-7836  
       | 0  51200x8-56320x7-142464x6+159568x5+124808x4-117328x3-43560x2+25812x+
       -------------------------------------------------------------------------
            |
       -820 |
            |
       5186 |

                     4             2
o535 : Matrix basicRx  <--- basicRx

i536 : o5gcd(o530_(0,1), o530_(1,1)[1P[1@2
stdio:540:21:(1):[0]: matrix column index 2 out of range 0 .. 1

i537 : gcd(o530_(0,1), o530_(1,2)[1P[1@[1P[1@2

o537 = 1

o537 : basicRx

i538 : gcd(o530_(0,1), o530_(2,1)[1P[1@1

         4     2
o538 = 4x  - 4x  + 1

o538 : basicRx

i539 : gcd(o530_(1,1), o530_(2,1)[1P[1@3

         4     2
o539 = 4x  - 4x  + 1

o539 : basicRx

i540 : gcd(o530_(1,1), o530_(3,1)[1P[1@2

         4     2
o540 = 4x  - 4x  + 1

o540 : basicRx

i541 : o530

o541 = | 91 -640x5+768x4+744x3-885x2-394x+205                                  
       | 0  10240x9-12288x8-22144x7+26448x6+20768x5-20512x4-9280x3+6820x2+1576x
       | 0  -20480x8+34816x7+1280x6-2336x5-17264x4-23776x3+26544x2+8120x-7836  
       | 0  51200x8-56320x7-142464x6+159568x5+124808x4-117328x3-43560x2+25812x+
       -------------------------------------------------------------------------
            |
       -820 |
            |
       5186 |

                     4             2
o541 : Matrix basicRx  <--- basicRx

i542 : o5gcd(o530_(2,1), o530_(3,1), o530_(1,1))

         4     2
o542 = 4x  - 4x  + 1

o542 : basicRx

i543 : o541_(0,1)

             5       4       3       2
o543 = - 640x  + 768x  + 744x  - 885x  - 394x + 205

o543 : basicRx

i544 : o541_(0,1) % o542

           3       2
o544 = 104x  - 117x  - 234x + 13

o544 : basicRx

i545 : o436

o545 = | 0                 16x4-16x2+4     |
       | 16x4-16x2+4       0               |
       | -32x3+16x2-16x+40 80x3+8x2-120x+4 |
       | 80x3+8x2-120x+4   56x3+20x2-4x+66 |

                     4             2
o545 : Matrix basicRx  <--- basicRx

i546 : U

        4     3     2
o546 = x  + 4x  + 2x  + 1

o546 : QQ [x]

i547 : toTex(U)
stdio:551:1:(1):[0]: no method for adjacent objects:
--            toTex (of class Symbol)
--             4     3     2
--    SPACE   x  + 4x  + 2x  + 1 (of class QQ [x])

i548 : toTex([1P[1P[1P[1@t

o548 = $x^{4}+4 x^{3}+2 x^{2}+1$

i549 : x-sqrt2/2
stdio:553:2:(1):[0]: expected pair to have a method for '-'

i550 : x-sqrt2/2i550 : [Kuse Rxy

o550 = Rxy

o550 : QuotientRing

i551 : use Rxx-sqrt2/2
stdio:555:2:(1):[0]: expected pair to have a method for '-'

i552 : x-sqrt2/2i552 : x-sqrt2/2i552 : [Kdescribe Rxy

                Rx [y]
o552 = -----------------------
        2    4     3     2
       y  - x  - 4x  - 2x  - 1

i553 : describe Rx

o553 = Qsqrt2 [x]

i554 : sqrt2

o554 = sqrt2

o554 : Qsqrt2

i555 : sqrt2/2

       1
o555 = -*sqrt2
       2

o555 : Qsqrt2

i556 : sqrt2/[1@x[1@ [1@-[1@ 
stdio:560:3:(1):[0]: expected pair to have a method for '-'

i557 : x

o557 = x

o557 : basicRx

i558 : x - sqrt2/2i558 : [4Psqrt2[describe Rxyi558 : [3Px-sqrt2/2i558 : [2Puse Rxy

o558 = Rxy

o558 : QuotientRing

i559 : x

o559 = x

o559 : basicRx

i560 : help use

o560 = use -- install or activate object
       *********************************



       Ways to use use :
       =================

         * "use(Package)" -- activate a previously dismissed package
         * use(Monoid), see "use(Ring)" -- install ring variables and ring
           operations
         * "use(Ring)" -- install ring variables and ring operations

o560 : DIV

i561 : help use(Ring)
--warning: tag has no documentation: User :: AffineVariety ** Ring, key (symbol **,AffineVariety,Ring)
--warning: tag has no documentation: User :: ChainComplex ** Ring, key (symbol **,ChainComplex,Ring)
--warning: tag has no documentation: User :: Constant _ Ring, key (symbol _,Constant,Ring)
--warning: tag has no documentation: User :: ProjectiveVariety ** Ring, key (symbol **,ProjectiveVariety,Ring)

o561 = Ring -- the class of all rings
       ******************************



       Description
       ===========

       Common ways to make a ring:
         * "Ring / Ideal" -- make a quotient ring
         * "Ring Array" -- the standard way to make a polynomial ring
         * "GF" -- make a finite field
       Common functions for accessing the variables or elements in a ring:
         * "use(Ring)" -- install ring variables and ring operations
         * "generators(Ring)" -- the list of generators of a ring
         * "numgens(Ring)" -- number of generators of a polynomial ring
         * "Ring _ ZZ" -- get a ring variable by index
         * "ZZ _ Ring" -- integers or zero element
       Common ways to get information about a ring:
         * "char(Ring)" -- computes the characteristic of the ring or field
         * "coefficientRing(Ring)" -- get the coefficient ring
         * "dim(Ring)" -- compute the Krull dimension
       Common ways to use a ring:
         * "Ring ^ ZZ" -- make a free module
         * "Ring ^ List" -- make a free module
         * "vars(Ring)" -- row matrix of the variables

       See also
       ========

         * "rings"

       Types of ring :
       ===============

         * "EngineRing" -- the class of rings handled by the engine

       Functions and methods returning a ring :
       ========================================

         * "ambient(GaloisField)" -- corresponding quotient ring
         * ambient(QuotientRing), see "ambient(Ring)" -- ambient polynomial ring
         * "ambient(Ring)" -- ambient polynomial ring
         * coefficientRing(Ring), see "coefficientRing" -- get the coefficient
           ring
         * "integralClosure(Ring)" -- compute the integral closure of a reduced
           ring
         * newRing(Ring), see "newRing" -- make a copy of a ring, with some
           features changed
         * "ring" -- get the associated ring of an object
         * "Ring ** Ring" -- tensor product
         * coefficientRing(SchurRing), see "SchurRing" -- the class of all Schur
           rings
         * "symmetricAlgebra(Module)" -- the symmetric algebra of a module
         * "tensor(Ring,Ring)" -- tensor product
         * "trim(Ring)"

       Methods that use a ring :
       =========================

         * Ideal * Ring, see "*" -- a binary operator, usually used for
           multiplication
         * MonomialIdeal * Ring, see "*" -- a binary operator, usually used for
           multiplication
         * Ring * Ideal, see "*" -- a binary operator, usually used for
           multiplication
         * Ring * MonomialIdeal, see "*" -- a binary operator, usually used for
           multiplication
         * Ring * RingElement, see "*" -- a binary operator, usually used for
           multiplication
         * Ring * Vector, see "*" -- a binary operator, usually used for
           multiplication
         * "AffineVariety ** Ring"
         * basis(InfiniteNumber,InfiniteNumber,Ring), see "basis" -- basis of
           all or part of a module or ring
         * basis(InfiniteNumber,List,Ring), see "basis" -- basis of all or part
           of a module or ring
         * basis(InfiniteNumber,ZZ,Ring), see "basis" -- basis of all or part of
           a module or ring
         * basis(List,InfiniteNumber,Ring), see "basis" -- basis of all or part
           of a module or ring
         * basis(List,List,Ring), see "basis" -- basis of all or part of a
           module or ring
         * basis(List,Ring), see "basis" -- basis of all or part of a module or
           ring
         * basis(List,ZZ,Ring), see "basis" -- basis of all or part of a module
           or ring
         * basis(Ring), see "basis" -- basis of all or part of a module or ring
         * basis(ZZ,InfiniteNumber,Ring), see "basis" -- basis of all or part of
           a module or ring
         * basis(ZZ,List,Ring), see "basis" -- basis of all or part of a module
           or ring
         * basis(ZZ,Ring), see "basis" -- basis of all or part of a module or
           ring
         * basis(ZZ,ZZ,Ring), see "basis" -- basis of all or part of a module or
           ring
         * "ChainComplex ** Ring"
         * "chainComplex(Ring)" -- make an empty chain complex over a ring
         * char(Ring), see "char" -- computes the characteristic of the ring or
           field
         * "Constant _ Ring"
         * "degree(Ring)"
         * degreeLength(Ring), see "degreeLength" -- the number of degrees
         * "degrees(Ring)" -- degrees of generators
         * "degreesRing(Ring)" -- the ring of degrees
         * diagonalMatrix(Ring,List), see "diagonalMatrix(Ring,ZZ,ZZ,List)" --
           make a diagonal matrix from a list
         * "diagonalMatrix(Ring,ZZ,ZZ,List)" -- make a diagonal matrix from a
           list
         * "dim(Ring)" -- compute the Krull dimension
         * "euler(Ring)" -- Euler characteristic
         * "eulers(Ring)" -- list the sectional Euler characteristics
         * Ext(Ideal,Ring), see "Ext(Module,Module)" -- total Ext module
         * Ext(Module,Ring), see "Ext(Module,Module)" -- total Ext module
         * Ext^ZZ(Matrix,Ring), see "Ext^ZZ(Matrix,Module)" -- map between Ext
           modules
         * Ext^ZZ(Ideal,Ring), see "Ext^ZZ(Module,Module)" -- Ext module
         * Ext^ZZ(Module,Ring), see "Ext^ZZ(Module,Module)" -- Ext module
         * "Fano(ZZ,Ideal,Ring)" -- Fano scheme
         * "flattenRing(Ring)" -- write a ring as a (quotient) of a polynomial
           ring over ZZ or a prime field
         * frac(Ring), see "frac" -- construct a fraction field
         * "genera(Ring)" -- list of the successive linear sectional arithmetic
           genera
         * "generators(Ring)" -- the list of generators of a ring
         * genericMatrix(Ring,RingElement,ZZ,ZZ), see "genericMatrix" -- make a
           generic matrix of variables
         * genericMatrix(Ring,ZZ,ZZ), see "genericMatrix" -- make a generic
           matrix of variables
         * genericSkewMatrix(Ring,RingElement,ZZ), see "genericSkewMatrix" --
           make a generic skew symmetric matrix of variables
         * genericSkewMatrix(Ring,ZZ), see "genericSkewMatrix" -- make a generic
           skew symmetric matrix of variables
         * genericSymmetricMatrix(Ring,RingElement,ZZ), see
           "genericSymmetricMatrix" -- make a generic symmetric matrix
         * genericSymmetricMatrix(Ring,ZZ), see "genericSymmetricMatrix" -- make
           a generic symmetric matrix
         * "genus(Ring)" -- arithmetic genus
         * "GF(Ring)" -- make a finite field from a ring
         * "hilbertFunction(List,Ring)" -- compute the Hilbert function of a
           ring
         * hilbertFunction(ZZ,Ring), see "hilbertFunction(List,Ring)" -- compute
           the Hilbert function of a ring
         * "hilbertPolynomial(Ring)" -- compute the Hilbert polynomial of the
           ring
         * "hilbertSeries(Ring)" -- compute the Hilbert series of the ring
         * Hom(Ideal,Ring), see "Hom(Module,Module)" -- module of homomorphisms
         * Hom(Module,Ring), see "Hom(Module,Module)" -- module of homomorphisms
         * Hom(Ring,Ideal), see "Hom(Module,Module)" -- module of homomorphisms
         * Hom(Ring,Module), see "Hom(Module,Module)" -- module of homomorphisms
         * ICfractions(Ring), see "ICfractions" -- Compute the fractions
           integral over a domain.
         * ICmap(Ring), see "ICmap" -- natural map from an affine domain into
           its integral closure.
         * "ideal(Ring)" -- returns the defining ideal
         * "IndexedVariable _ Ring" -- get a ring variable by name
         * isAffineRing(Ring), see "isAffineRing" -- whether something is an
           affine ring
         * isCommutative(Ring), see "isCommutative" -- whether a ring is
           commutative
         * isField(Ring), see "isField" -- whether something is a field
         * isHomogeneous(Ring), see "isHomogeneous" -- whether something is
           homogeneous (graded)
         * isNormal(Ring), see "isNormal" -- determine if a reduced ring is
           normal
         * isQuotientOf(Ring,QuotientRing), see "isQuotientOf(Ring,Ring)" --
           whether one ring is a quotient of another
         * "isQuotientOf(Ring,Ring)" -- whether one ring is a quotient of
           another
         * "isQuotientOf(Type,Ring)" -- whether one ring is a quotient of a ring
           of a given type
         * isQuotientRing(Ring), see "isQuotientRing" -- whether something is a
           quotient ring
         * isRing(Ring), see "isRing" -- whether something is a ring
         * isSkewCommutative(Ring), see "isSkewCommutative" -- whether a ring
           has skew commuting variables
         * "jacobian(Ring)" -- the Jacobian matrix of the polynomials defining a
           quotient ring
         * "map(Ring,Matrix)" -- make a ring map
         * "map(Ring,Ring)" -- map which associates variables, rest maps to zero
         * "map(Ring,Ring,List)" -- make a ring map
         * "map(Ring,Ring,Matrix)" -- make a ring map
         * "Matrix ** Ring" -- tensor product
         * Ring ** Matrix, see "Matrix ** Ring" -- tensor product
         * "matrix(Ring,List)" -- create a matrix from a doubly nested list of
           ring elements or matrices
         * "minimalPresentation(Ring)" -- compute a minimal presentation of a
           quotient ring
         * "Module ** Ring" -- tensor product
         * Ring ** Module, see "Module ** Ring" -- tensor product
         * "module(Ring)"
         * "mutableIdentity(Ring,ZZ)" -- make a mutable identity matrix
         * "mutableMatrix(Ring,ZZ,ZZ)" -- make a mutable matrix filled with
           zeroes
         * "numgens(Ring)" -- number of generators of a polynomial ring
         * "options(Ring)" -- get values used for optional arguments
         * "poincare(Ring)" -- assemble degrees of an ring into a polynomial
         * precision(Ring), see "precision"
         * "Proj(Ring)" -- make a projective variety
         * "ProjectiveVariety ** Ring"
         * random(List,Ring), see "random(Type)" -- random element of a type
         * random(ZZ,Ring), see "random(Type)" -- random element of a type
         * "Ring / Ideal" -- make a quotient ring
         * Ring / List, see "Ring / Ideal" -- make a quotient ring
         * Ring / Module, see "Ring / Ideal" -- make a quotient ring
         * Ring / MonomialIdeal, see "Ring / Ideal" -- make a quotient ring
         * Ring / RingElement, see "Ring / Ideal" -- make a quotient ring
         * Ring / Sequence, see "Ring / Ideal" -- make a quotient ring
         * Ring / ZZ, see "Ring / Ideal" -- make a quotient ring
         * "Ring ^ List" -- make a free module
         * "Ring ^ ZZ" -- make a free module
         * "Ring _ List" -- make a monomial from a list of exponents
         * "Ring _ String" -- get a ring variable by name
         * "Ring _ ZZ" -- get a ring variable by index
         * "Ring ~" -- make the structure sheaf
         * "Ring Array" -- the standard way to make a polynomial ring
         * "Ring List" -- make a local polynomial ring
         * "Ring OrderedMonoid" -- make a polynomial ring
         * "sheaf(Ring)" -- make the structure sheaf
         * "sheaf(Variety,Ring)" -- make a coherent sheaf of rings
         * singularLocus(Ring), see "singularLocus" -- singular locus
         * "Spec(Ring)" -- make an affine variety
         * substitute(Ideal,Ring), see "substitute" -- substituting values for
           variables
         * substitute(Matrix,Ring), see "substitute" -- substituting values for
           variables
         * substitute(Module,Ring), see "substitute" -- substituting values for
           variables
         * substitute(Number,Ring), see "substitute" -- substituting values for
           variables
         * substitute(RingElement,Ring), see "substitute" -- substituting values
           for variables
         * substitute(Vector,Ring), see "substitute" -- substituting values for
           variables
         * RingElement _ Ring, see "Symbol _ Ring" -- get a ring variable by
           name
         * "Symbol _ Ring" -- get a ring variable by name
         * "tensor(Ring,RingMap,Matrix)" -- tensor product via a ring map
         * tensor(Ring,RingMap,Module), see "tensor(Ring,RingMap,Matrix)" --
           tensor product via a ring map
         * terms(Ring,RingElement), see "terms" -- provide a list of terms of a
           polynomial
         * "toField(Ring)" -- declare that a ring is a field
         * "use(Ring)" -- install ring variables and ring operations
         * "vars(Ring)" -- row matrix of the variables
         * "ZZ _ Ring" -- integers or zero element

       Fixed objects of class Ring :
       =============================

         * "QQ" -- the class of all rational numbers
         * "ZZ" -- the class of all integers

       For the programmer
       ==================

       The object "Ring" is a type, with ancestor classes "Type" <
       "MutableHashTable" < "HashTable" < "Thing".

o561 : DIV

i562 : help use(Ring)i562 : [Kx

o562 = x

o562 : basicRx

i563 : use Rx

o563 = Rx

o563 : PolynomialRing

i564 : x

o564 = x

o564 : Rx

i565 : use Rxy

o565 = Rxy

o565 : QuotientRing

i566 : x

o566 = x

o566 : Rx

i567 : use Rxx[use x[help use(Rinx[use Rxx[K - sqrt2/2

           1
o567 = x - -*sqrt2
           2

o567 : Rx

i568 : x - sqrt2/2 + (y - (1/2 + sqrt2))

               3         1
o568 = y + x - -*sqrt2 - -
               2         2

o568 : Rxy

i569 : x - sqrt2/2 + (y - (1/2 + sqrt2))i569 : [1@f[1@ [1@=[1@ 

               3         1
o569 = y + x - -*sqrt2 - -
               2         2

o569 : Rxy

i570 : sub(f, y => -y)

                 3         1
o570 = - y + x - -*sqrt2 - -
                 2         2

o570 : Rxy

i571 : sub(f, y => -y)i571 : [1@f[1@ [1@*[1@ 

          4     3    2                     9      2   3         3
o571 = - x  - 4x  - x  + (- 3sqrt2 - 1)x + -*sqrt2  + -*sqrt2 - -
                                           4          2         4

o571 : Rxy

i572 : f * sub(f, y => -y)i572 : [1@t[1@o[1@S[1@t[1@r[1@i[1@n[1@g[1@(f * sub(f, y => -y))

o572 = -x^4-4*x^3-x^2+(-3*sqrt2-1)*x+9/4*sqrt2^2+3/2*sqrt2-3/4

i573 : -x^4-4*x^3-x^2+(-3*sqrt2-1)*x+9/4*sqrt2^2+3/2*sqrt2-3/4

          4     3    2                     3         15
o573 = - x  - 4x  - x  + (- 3sqrt2 - 1)x + -*sqrt2 + --
                                           2          4

o573 : Rx

i574 : factor(o573)

            4      3     2                                   1
o574 = (- 4x  - 16x  - 4x  + (- 12sqrt2 - 4)x + 6sqrt2 + 15)(-)
                                                             4

o574 : Expression of class Product

i575 : help factor
--warning: tag has no documentation: User :: factor(basicRx), key (factor,QQ [x])
--warning: tag has no documentation: User :: factor(Fx), key (factor,Fx)
--warning: tag has no documentation: User :: factor(Fxv), key (factor,Fxv)
--warning: tag has no documentation: User :: factor(Rx), key (factor,Qsqrt2 [x])
--warning: tag has no documentation: User :: factor(Rxv), key (factor,Rx [v])

o575 = factor -- factor a ring element or a ZZ-module
       **********************************************



       Ways to use factor :
       ====================

         * "factor(basicRx)"
         * "factor(Fx)"
         * "factor(Fxv)"
         * "factor(Module)" -- factor a ZZ-module
         * factor(QQ), see "factor(RingElement)" -- factor a ring element
         * "factor(RingElement)" -- factor a ring element
         * factor(ZZ), see "factor(RingElement)" -- factor a ring element
         * "factor(Rx)"
         * "factor(Rxv)"

o575 : DIV

i576 : o573

          4     3    2                     3         15
o576 = - x  - 4x  - x  + (- 3sqrt2 - 1)x + -*sqrt2 + --
                                           2          4

o576 : Rx

i577 : o573 / (x - sqrt2/2)

            3                   2
       - 16x  + (- 8sqrt2 - 64)x  + (- 32sqrt2 - 24)x - 60sqrt2 - 48
o577 = -------------------------------------------------------------
                                     16

o577 : Fx

i578 : o573 / (x - sqrt2/2)i578 : o573 /[1@

          3      1            2               3     15
o578 = - x  + (- -*sqrt2 - 4)x  + (- 2sqrt2 - -)x - --*sqrt2 - 3
                 2                            2      4

o578 : Rx

i579 : o573 // (x - sqrt2/2)i579 : o573 // (x - sqrt2/2)^2

          2                             5
o579 = - x  + (- sqrt2 - 4)x - 4sqrt2 - -
                                        2

o579 : Rx

i580 : o573 // (x - sqrt2/2)^2i580 : o573 /[1[1P[1@%

                         7
o580 = (- 5sqrt2 - 7)x + -*sqrt2 + 5
                         2

o580 : Rx

i581 : o573 % (x - sqrt2/2)

o581 = 0

o581 : Rx

i582 : o573 % (x - sqrt2/[1P[1@+

o582 = 3sqrt2 + 6

o582 : Rx

i583 : sub(o573, x => x + sqrt2/2)

          4                  3                  2
o583 = - x  + (- 2sqrt2 - 4)x  + (- 6sqrt2 - 4)x  + (- 5sqrt2 - 7)x

o583 : Rx

i584 : sub(o573, x => x + sqrt2/[1P[1@-

          4                3                2
o584 = - x  + (2sqrt2 - 4)x  + (6sqrt2 - 4)x  + (- sqrt2 - 7)x + 3sqrt2 + 6

o584 : Rx

i585 : [15@(reverse-i-search)`':f': help fact[16Pi585 : help factori585 : [15@(reverse-i-search)`':f': factor(o573[18@ ': toString(f * sub(f, y => -y[9@=': f = x - sqrt2/2 + (y - (1/2 + sqrt2(reverse-i-search)`f =': [18Pi585 : f = x [K(y - (1/2 + sqrt2))/(x-sqrt2/2)

       4y - 4sqrt2 - 2
o585 = ---------------
         4x - 2sqrt2

o585 : frac(Rxy)

i586 : [15@(reverse-i-search)`':s': f = (y - (1/2 + sqrt2))/(x-sqrt2/(reverse-i-search)`s[7Pu': sub(o573, x => x [1@b': sub(o573, x => x[2@toString(f * sub(f, y => -y[18Pi586 : toString(f * 
stdio:590:14:(1):[0]: expected y to be a generator of frac((Rx [y])/(y^2-x^4-4*x^3-2*x^2-1))

i587 : f

       4y - 4sqrt2 - 2
o587 = ---------------
         4x - 2sqrt2

o587 : frac(Rxy)

i588 : toString(f * sub(f, y => -y))i588 : [1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1P[1Psub(f, y => -y)
stdio:592:1:(1):[0]: expected y to be a generator of frac((Rx [y])/(y^2-x^4-4*x^3-2*x^2-1))

i589 : sub(f, y => -y)i589 : f[toString(f * sub(f, y => -y))i589 : [6@f = (y - (1/2 + sqrt2))/(x-sqrt2/2)i589 : [8Psub(o573, x => x - sqrt2/+ sqrt2/- sqrt2/2)i589 : [8@f = (y - (1/2 + sqrt2))/(x-sqrt2/2)i589 : [6PtoString(f * sub(f, y => -y))i589 : f[sub(f, y => -y)i589 : [Klift(o587,Rxy)
stdio:593:1:(1):[0]: cannot lift given ring element

i590 : sub(o587, Rxy)
stdio:594:1:(1):[0]: a non unit was found in a ring declared to be a field

i591 : sub(o587, Rxy)i591 : lift(o587,Rxy)i591 : [1@sub(f, y => -y)i591 : f[toString(f * sub(f, y => -y))i591 : [6@f = (y - (1/2 + sqrt2))/(x-sqrt2/2)i591 : 

       4y - 4sqrt2 - 2
o591 = ---------------
         4x - 2sqrt2

o591 : frac(Rxy)

i592 : f = (y - (1/2 + sqrt2))/(x-sqrt2/2)i592 : f = (y - (1/2 + sqrt2))/[1@

o592 = 0

o592 : Rxy

i593 : f = (y - (1/2 + sqrt2))//(x-sqrt2/2/[1[1P[1@%

                   1
o593 = y - sqrt2 - -
                   2

o593 : Rxy

i594 : f = (y - (1/2 + sqrt2))%(x-sqrt2/[1P[1@/

       4y - 4sqrt2 - 2
o594 = ---------------
         4x - 2sqrt2

o594 : frac(Rxy)

i595 : toField(Rxy)
stdio:599:1:(1):[0]: attempting to declare a ring with known non-units to be a field

i596 : Rxy

o596 = Rxy

o596 : QuotientRing

i597 : Rx[1@d[1@e[1@s[1@c[1@r[1@i[1@b[1@e[1@ 

                Rx [y]
o597 = -----------------------
        2    4     3     2
       y  - x  - 4x  - 2x  - 1

i598 : describe Rx

o598 = Qsqrt2 [x]

i599 : Fx = frac Rx

o599 = Fx

o599 : FractionField

i600 : [15@(reverse-i-search)`':R': Fx = frac R[1@x': Fx = fracy': describe Rx ': Rxy = Rx[y]/(y^2 - poly "x4+4x3+2x2+1")(reverse-i-search)`Rxy ': [19Pi600 : [1P[1@Fxy = [1P[1@Fx[y]/(y^2 - poly "x4+4x3+2x2+1")

o600 = Fxy

o600 : QuotientRing

i601 : use Fxy

o601 = Fxy

o601 : QuotientRing

i602 : use FxFxy = Fx[y]/(y^2 - poly "x4+4x3+2x2+1")i602 : Fx = frac Rx[Ki602 : [1Pdescribe Rxyi602 : Rxy[toField(Rxy)i602 : [23@f = (y - (1/2 + sqrt2))/(x-sqrt2/%(x-sqrt2//(x-sqrt2/%(x-sqrt2//(x-sqrt2/2)

            2         - 4sqrt2 - 2
o602 = ----------*y + ------------
       2x - sqrt2      4x - 2sqrt2

o602 : frac(Fxy)

i603 : toField(Fxy)

o603 = Fxy

o603 : QuotientRing

i604 : toField(Fxy)i604 : [23@f = (y - (1/2 + sqrt2))/(x-sqrt2/2)
-- SIGSEGV
-- stack trace:
level 0 -- return addr: 0x08051d72 -- frame: 0xbfd928d8
level 1 -- return addr: 0xb7f29420 -- frame: 0xbfd928f8
level 2 -- return addr: 0x081d1190 -- frame: 0xbfd92c28
level 3 -- return addr: 0x081549ea -- frame: 0xbfd92c78
level 4 -- return addr: 0x081cf6e5 -- frame: 0xbfd92c98
level 5 -- return addr: 0x081e80c1 -- frame: 0xbfd92cc8
level 6 -- return addr: 0x080c3d7e -- frame: 0xbfd92d08
level 7 -- return addr: 0x080c4869 -- frame: 0xbfd92d98
level 8 -- return addr: 0x080cadb6 -- frame: 0xbfd92df8
level 9 -- return addr: 0x080bec61 -- frame: 0xbfd931b8
level 10 -- return addr: 0x080cadf1 -- frame: 0xbfd93268
level 11 -- return addr: 0x080cf29e -- frame: 0xbfd93628
level 12 -- return addr: 0x080cf768 -- frame: 0xbfd93708
level 13 -- return addr: 0x080c3c5c -- frame: 0xbfd93768
level 14 -- return addr: 0x080c4869 -- frame: 0xbfd937f8
level 15 -- return addr: 0x080cadb6 -- frame: 0xbfd93858
level 16 -- return addr: 0x080b4660 -- frame: 0xbfd93c18
level 17 -- return addr: 0x080cadb6 -- frame: 0xbfd93c78
level 18 -- return addr: 0x080cf29e -- frame: 0xbfd94038
level 19 -- return addr: 0x080cf768 -- frame: 0xbfd94118
level 20 -- return addr: 0x080c4d35 -- frame: 0xbfd94178
-- end stack trace
Aborted
baccala@bigsky ~/DifAlg$ exit

Script done on Wed 07 May 2008 02:23:15 AM EDT
